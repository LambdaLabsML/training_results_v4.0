+ echo 'Beginning trial 1 of 1'
Beginning trial 1 of 1
+ echo ':::DLPAL /home/miwa/Training4.0.2/Fujitsu/benchmarks/sd-slurm/exec/../sqsh/nvcr.io+nvdlfwea+mlperfv40+sd+20240429.pytorch.sqsh 160 1 mlperf-h100-0208 GX2560M7 GX2560M7_01x04x64'
:::DLPAL /home/miwa/Training4.0.2/Fujitsu/benchmarks/sd-slurm/exec/../sqsh/nvcr.io+nvdlfwea+mlperfv40+sd+20240429.pytorch.sqsh 160 1 mlperf-h100-0208 GX2560M7 GX2560M7_01x04x64
++ srun --ntasks=1 --container-name=stable_diffusion_160 mlperf-sysjson.sh
srun: error: mlperf-h100-0208: task 0: Exited with exit code 1
the only legal values for MLPERF_STATUS are
* onprem (means: available on premise)
* cloud  (means: available in cloud)
* preview
* reserach (means: research, devlopment, or internal)
+ echo ':::SYSJSON 
usage: mlperf-sysjson.sh
   behavior is controlled by envvars
   Required:
   * MLPERF_SUBMITTER
   * MLPERF_SYSTEM_NAME
   * MLPERF_STATUS (must be '\''onprem'\'', '\''cloud'\'', '\''preview'\'', or '\''research'\'')

   Required but usually have reasonable defaults:
   * MLPERF_DIVISION (defaults to '\''closed'\'', may change to '\''open'\'')
   * MLPERF_NUM_NODES (defaults to DGXNNODES if defined)

   Optional:
    * MLPERF_HOST_STORAGE_TYPE
    * MLPERF_HOST_STORAGE_CAPACITY
    * MLPERF_HOST_NETWORKING
    * MLPERF_HOST_NETWORKING_TOPOLOGY
    * MLPERF_HOST_MEMORY_CONFIGURATION
    * MLPERF_ACCELERATOR_MODEL_NAME
    * MLPERF_ACCELERATOR_HOST_INTERCONNECT
    * MLPERF_ACCELERATOR_FREQUENCY
    * MLPERF_ACCELERATOR_ON_CHIP_MEMORIES
    * MLPERF_ACCELERATOR_MEMORY_CONFIGURATION
    * MLPERF_ACCELERATOR_INTERCONNECT
    * MLPERF_ACCELERATOR_INTERCONNECT_TOPOLOGY
    * MLPERF_COOLING
    * MLPERF_HW_NOTES

    Automatically generated:
    * most of the rest of the fields in the system json, including things like
      * cpu sockets, cores, model name
      * accelerator model name, quantity
      * cuda and library versions'
:::SYSJSON 
usage: mlperf-sysjson.sh
   behavior is controlled by envvars
   Required:
   * MLPERF_SUBMITTER
   * MLPERF_SYSTEM_NAME
   * MLPERF_STATUS (must be 'onprem', 'cloud', 'preview', or 'research')

   Required but usually have reasonable defaults:
   * MLPERF_DIVISION (defaults to 'closed', may change to 'open')
   * MLPERF_NUM_NODES (defaults to DGXNNODES if defined)

   Optional:
    * MLPERF_HOST_STORAGE_TYPE
    * MLPERF_HOST_STORAGE_CAPACITY
    * MLPERF_HOST_NETWORKING
    * MLPERF_HOST_NETWORKING_TOPOLOGY
    * MLPERF_HOST_MEMORY_CONFIGURATION
    * MLPERF_ACCELERATOR_MODEL_NAME
    * MLPERF_ACCELERATOR_HOST_INTERCONNECT
    * MLPERF_ACCELERATOR_FREQUENCY
    * MLPERF_ACCELERATOR_ON_CHIP_MEMORIES
    * MLPERF_ACCELERATOR_MEMORY_CONFIGURATION
    * MLPERF_ACCELERATOR_INTERCONNECT
    * MLPERF_ACCELERATOR_INTERCONNECT_TOPOLOGY
    * MLPERF_COOLING
    * MLPERF_HW_NOTES

    Automatically generated:
    * most of the rest of the fields in the system json, including things like
      * cpu sockets, cores, model name
      * accelerator model name, quantity
      * cuda and library versions
+ '[' 1 -eq 1 ']'
+ srun --ntasks=1 --mpi=pmix bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on mlperf-h100-0208
vm.drop_caches = 3
+ srun --ntasks=1 --mpi=pmix --container-name=stable_diffusion_160 python -c '
from mlperf_logging import mllog
mllogger = mllog.get_mllogger()
mllogger.event(key=mllog.constants.CACHE_CLEAR, value=True)'
:::MLLOG {"namespace": "", "time_ms": 1714724607565, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ srun -l --mpi=pmix --ntasks=4 --ntasks-per-node=4 --container-name=stable_diffusion_160 --container-mounts=./results:/results,/home/miwa/Training4.0.2/Fujitsu/benchmarks/sd-slurm/exec/../data/datasets:/datasets,/home/miwa/Training4.0.2/Fujitsu/benchmarks/sd-slurm/exec/../data/checkpoints:/checkpoints,/mnt/data5/work/sd/nemologs/:/nemologs --container-workdir=/workspace/sd --container-env=MASTER_PORT,MASTER_ADDR slurm2pytorch ./run_and_time.sh
2: STARTING TIMING RUN AT 2024-05-03 05:23:32 PM
3: STARTING TIMING RUN AT 2024-05-03 05:23:32 PM
0: STARTING TIMING RUN AT 2024-05-03 05:23:32 PM
1: STARTING TIMING RUN AT 2024-05-03 05:23:32 PM
1: :::MLLOG {"namespace": "", "time_ms": 1714724616344, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724616344, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
3: :::MLLOG {"namespace": "", "time_ms": 1714724616579, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
2: :::MLLOG {"namespace": "", "time_ms": 1714724616713, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
0: RANDOM_SEED=14735
1: RANDOM_SEED=14735
3: RANDOM_SEED=14735
2: RANDOM_SEED=14735
2: num_gpus=4 num_sockets = 2 num_nodes=2 cores_per_socket=48
0: num_gpus=4 num_sockets = 2 num_nodes=2 cores_per_socket=48
1: num_gpus=4 num_sockets = 2 num_nodes=2 cores_per_socket=48
3: num_gpus=4 num_sockets = 2 num_nodes=2 cores_per_socket=48
1: FlashAttention Installed
2: FlashAttention Installed
0: FlashAttention Installed
3: FlashAttention Installed
0: [NeMo W 2024-05-03 17:24:01 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/hydra/_internal/hydra.py:119: UserWarning: Future Hydra versions will no longer change working directory at job runtime by default.
0:     See https://hydra.cc/docs/1.2/upgrades/1.1_to_1.2/changes_to_job_working_dir/ for more information.
0:       ret = run_job(
0:     
1: :::MLLOG {"namespace": "", "time_ms": 1714724641767, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/sd/main.py", "lineno": 73}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724641767, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/sd/main.py", "lineno": 73}}
3: :::MLLOG {"namespace": "", "time_ms": 1714724641767, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/sd/main.py", "lineno": 73}}
2: :::MLLOG {"namespace": "", "time_ms": 1714724641768, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/sd/main.py", "lineno": 73}}
0: [NeMo I 2024-05-03 17:24:02 main:67] L2 promotion: 128 B
0: :::MLLOG {"namespace": "", "time_ms": 1714724642610, "event_type": "POINT_IN_TIME", "key": "seed", "value": 3837382943, "metadata": {"file": "/workspace/sd/main.py", "lineno": 84}}
0: [rank: 0] Seed set to 3837382943
0: [NeMo I 2024-05-03 17:24:02 main:87] 
0:     
0:     ************** Experiment configuration ***********
1: :::MLLOG {"namespace": "", "time_ms": 1714724642615, "event_type": "POINT_IN_TIME", "key": "seed", "value": 3352255575, "metadata": {"file": "/workspace/sd/main.py", "lineno": 84}}
1: [rank: 1] Seed set to 3352255575
3: :::MLLOG {"namespace": "", "time_ms": 1714724642616, "event_type": "POINT_IN_TIME", "key": "seed", "value": 2142105111, "metadata": {"file": "/workspace/sd/main.py", "lineno": 84}}
3: [rank: 3] Seed set to 2142105111
2: :::MLLOG {"namespace": "", "time_ms": 1714724642621, "event_type": "POINT_IN_TIME", "key": "seed", "value": 3163487872, "metadata": {"file": "/workspace/sd/main.py", "lineno": 84}}
2: [rank: 2] Seed set to 3163487872
0: [NeMo I 2024-05-03 17:24:02 main:88] 
0:     name: stable-diffusion2-train-240503172211376963996
0:     trainer:
0:       devices: 4
0:       num_nodes: 1
0:       accelerator: gpu
0:       logger: false
0:       enable_checkpointing: false
0:       max_epochs: -1
0:       max_steps: 12000
0:       log_every_n_steps: 10000
0:       accumulate_grad_batches: 1
0:       gradient_clip_val: 1.0
0:       benchmark: false
0:       enable_model_summary: true
0:     exp_manager:
0:       exp_dir: /tmp/nemologs
0:       name: ${name}
0:       create_wandb_logger: false
0:       wandb_logger_kwargs:
0:         project: stable-diffusion
0:         group: nemo-sd
0:         name: ${name}
0:         resume: true
0:       create_checkpoint_callback: true
0:       create_tensorboard_logger: true
0:       checkpoint_callback_params:
0:         every_n_train_steps: 2000
0:         every_n_epochs: 0
0:         monitor: timestamp
0:         filename: ${name}--{timestamp}-{step}-{consumed_samples}
0:         save_top_k: -1
0:         save_last: false
0:         save_nemo_on_train_end: false
0:         save_weights_only: true
0:       resume_if_exists: true
0:       resume_ignore_no_checkpoint: true
0:       ema:
0:         enable: false
0:         decay: 0.9999
0:         validate_original_weights: false
0:         every_n_steps: 1
0:         cpu_offload: false
0:       create_preemption_callback: false
0:       log_step_timing: false
0:     model:
0:       precision: 16
0:       micro_batch_size: 64
0:       global_batch_size: 256
0:       linear_start: 0.00085
0:       linear_end: 0.012
0:       num_timesteps_cond: 1
0:       log_every_t: 200
0:       timesteps: 1000
0:       first_stage_key: images_moments
0:       cond_stage_key: clip_encoded
0:       image_size: 64
0:       channels: 4
0:       cond_stage_trainable: false
0:       conditioning_key: crossattn
0:       monitor: val/loss_simple_ema
0:       scale_factor: 0.18215
0:       use_ema: false
0:       scale_by_std: false
0:       ckpt_path: /checkpoints/sd/512-base-ema.ckpt
0:       load_vae: true
0:       load_unet: false
0:       load_encoder: true
0:       ignore_keys: []
0:       parameterization: v
0:       clip_denoised: true
0:       load_only_unet: false
0:       cosine_s: 0.008
0:       given_betas: null
0:       original_elbo_weight: 0
0:       v_posterior: 0
0:       l_simple_weight: 1
0:       use_positional_encodings: false
0:       learn_logvar: false
0:       logvar_init: 0
0:       beta_schedule: linear
0:       loss_type: l2
0:       channels_last: true
0:       concat_mode: true
0:       cond_stage_forward: null
0:       text_embedding_dropout_rate: 0.0
0:       fused_opt: true
0:       inductor: true
0:       inductor_cudagraphs: false
0:       capture_cudagraph_iters: 15
0:       unet_config:
0:         _target_: nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel
0:         from_pretrained: null
0:         from_NeMo: null
0:         image_size: 32
0:         in_channels: 4
0:         out_channels: 4
0:         model_channels: 320
0:         attention_resolutions:
0:         - 4
0:         - 2
0:         - 1
0:         num_res_blocks: 2
0:         channel_mult:
0:         - 1
0:         - 2
0:         - 4
0:         - 4
0:         num_head_channels: 64
0:         use_spatial_transformer: true
0:         use_linear_in_transformer: true
0:         transformer_depth: 1
0:         context_dim: 1024
0:         use_checkpoint: false
0:         legacy: false
0:         use_flash_attention: true
0:         resblock_gn_groups: 16
0:         unet_precision: fp16
0:         timesteps: ${model.timesteps}
0:       first_stage_config:
0:         _target_: nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL
0:         from_pretrained: null
0:         embed_dim: 4
0:         monitor: val/rec_loss
0:         ddconfig:
0:           double_z: true
0:           z_channels: 4
0:           resolution: 256
0:           in_channels: 3
0:           out_ch: 3
0:           ch: 128
0:           ch_mult:
0:           - 1
0:           - 2
0:           - 4
0:           - 4
0:           num_res_blocks: 2
0:           attn_resolutions: []
0:           dropout: 0.0
0:         lossconfig:
0:           target: torch.nn.Identity
0:       cond_stage_config:
0:         _target_: nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder
0:         arch: ViT-H-14
0:         version: laion2b_s32b_b79k
0:         freeze: true
0:         layer: penultimate
0:         cache_dir: /checkpoints/clip
0:       seed: 14735
0:       resume_from_checkpoint: null
0:       apex_transformer_log_level: 30
0:       gradient_as_bucket_view: true
0:       ddp_overlap: false
0:       nsys_profile:
0:         enabled: false
0:         start_step: 10
0:         end_step: 10
0:         ranks:
0:         - 0
0:         gen_shape: false
0:       data:
0:         num_workers: 16
0:         train:
0:           dataset_path: /datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar
0:           augmentations:
0:             resize_smallest_side: 512
0:             center_crop_h_w: 512, 512
0:             horizontal_flip: false
0:           filterings: null
0:         webdataset:
0:           infinite_sampler: true
0:           local_root_path: /datasets/laion-400m/webdataset-moments-filtered-encoded
0:       optim:
0:         name: distributed_fused_adam
0:         lr: 2.56e-05
0:         weight_decay: 0.0
0:         betas:
0:         - 0.9
0:         - 0.999
0:         sched:
0:           name: WarmupHoldPolicy
0:           warmup_steps: 1000
0:           hold_steps: 10000000000000
0:         bucket_cap_mb: 288
0:         overlap_grad_sync: true
0:         overlap_param_sync: false
0:         contiguous_grad_buffer: true
0:         contiguous_param_buffer: true
0:         store_params: true
0:         dtype: torch.float32
0:         grad_sync_dtype: torch.float16
0:         param_sync_dtype: torch.float16
0:         capturable: true
0:         distribute_within_nodes: true
0:     
0: [NeMo W 2024-05-03 17:24:02 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/pytorch_lightning/_graveyard/precision.py:49: The `MixedPrecisionPlugin` is deprecated. Use `pytorch_lightning.plugins.precision.MixedPrecision` instead.
0:     
0: GPU available: True (cuda), used: True
0: TPU available: False, using: 0 TPU cores
0: IPU available: False, using: 0 IPUs
0: HPU available: False, using: 0 HPUs
0: [NeMo W 2024-05-03 17:24:02 exp_manager:773] No version folders would be created under the log folder as 'resume_if_exists' is enabled.
0: [NeMo W 2024-05-03 17:24:02 exp_manager:630] There were no checkpoints found in checkpoint_dir or no checkpoint folder at checkpoint_dir :/tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints. Training from scratch.
0: [NeMo I 2024-05-03 17:24:02 exp_manager:396] Experiments will be logged at /tmp/nemologs/stable-diffusion2-train-240503172211376963996
0: [NeMo I 2024-05-03 17:24:02 exp_manager:856] TensorboardLogger has been set up
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': True, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in_
0: channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filtere
0: d-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo I 2024-05-03 17:24:02 megatron_init:265] Rank 0 has data parallel group : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:271] Rank 0 has combined group of data parallel and context parallel : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:276] All data parallel group ranks with context parallel combined: [[0, 1, 2, 3]]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:279] Ranks 0 has data parallel rank: 0
0: [NeMo I 2024-05-03 17:24:02 megatron_init:287] Rank 0 has context parallel group: [0]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:290] All context parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:291] Ranks 0 has context parallel rank: 0
0: [NeMo I 2024-05-03 17:24:02 megatron_init:298] Rank 0 has model parallel group: [0]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:299] All model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:308] Rank 0 has tensor model parallel group: [0]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:312] All tensor model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:313] Rank 0 has tensor model parallel rank: 0
0: [NeMo I 2024-05-03 17:24:02 megatron_init:333] Rank 0 has pipeline model parallel group: [0]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:345] Rank 0 has embedding group: [0]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:351] All pipeline model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:352] Rank 0 has pipeline model parallel rank 0
0: [NeMo I 2024-05-03 17:24:02 megatron_init:353] All embedding group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 17:24:02 megatron_init:354] Rank 0 has embedding rank: 0
0: 24-05-03 17:24:02 - PID:119837 - rank:(0, 0, 0, 0) - microbatches.py:39 - INFO - setting number of micro-batches to constant 1
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 17:24:02 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': True, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in_
0: channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filtere
0: d-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [NeMo I 2024-05-03 17:24:02 ddpm:130] LatentDiffusion: Running in v-prediction mode
0: [NeMo I 2024-05-03 17:24:02 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 17:24:02 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 17:24:03 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 17:24:03 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 17:24:03 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 17:24:03 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 17:24:04 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 17:24:05 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 17:24:05 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 17:24:05 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 17:24:06 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 17:24:06 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 17:24:06 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 17:24:06 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 17:24:06 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 17:24:06 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 17:24:07 utils:92] DiffusionWrapper has 865.91 M params.
0: [NeMo I 2024-05-03 17:24:07 ddpm:168] Use system random generator since CUDA graph enabled
0: making attention of type 'vanilla' with 512 in_channels
0: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
0: making attention of type 'vanilla' with 512 in_channels
0: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
0: Loaded ViT-H-14 model config.
2: [W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
3: [W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
1: [W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
2: making attention of type 'vanilla' with 512 in_channels
1: making attention of type 'vanilla' with 512 in_channels
2: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
1: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
2: making attention of type 'vanilla' with 512 in_channels
1: making attention of type 'vanilla' with 512 in_channels
2: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
2: Loaded ViT-H-14 model config.
1: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
1: Loaded ViT-H-14 model config.
3: making attention of type 'vanilla' with 512 in_channels
3: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
3: making attention of type 'vanilla' with 512 in_channels
3: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
3: Loaded ViT-H-14 model config.
2: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
1: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
3: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
0: [NeMo I 2024-05-03 17:24:26 ddpm:260] Loading /checkpoints/sd/512-base-ema.ckpt
0: [NeMo I 2024-05-03 17:24:26 ddpm:261] It has 1242 entries
0: [NeMo I 2024-05-03 17:24:26 ddpm:262] Existing model has 1240 entries
0: [NeMo I 2024-05-03 17:24:26 ddpm:296] Deleted 686 keys from `model.diffusion_model` state_dict.
0: [NeMo I 2024-05-03 17:24:27 ddpm:301] Restored from /checkpoints/sd/512-base-ema.ckpt with 686 missing and 2 unexpected keys
0: [NeMo I 2024-05-03 17:24:27 ddpm:303] Missing Keys: ['model.diffusion_model._orig_mod.time_embed.0.weight', 'model.diffusion_model._orig_mod.time_embed.0.bias', 'model.diffusion_model._orig_mod.time_embed.2.weight', 'model.diffusion_model._orig_mod.time_embed.2.bias', 'model.diffusion_model._orig_mod.input_blocks.0.0.weight', 'model.diffusion_model._orig_mod.input_blocks.0.0.bias', 'model.diffusion_model._orig_mod.input_blocks.1.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.1.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.1.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.1.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.1.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.1.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.1.0.out_layers.2.weight', 'mo
0: del.diffusion_model._orig_mod.input_blocks.1.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.input_blocks.1.1.norm.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.norm.bias', 'model.diffusion_model._orig_mod.input_blocks.1.1.proj_in.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.proj_in.bias', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.input_blocks.1.1.tr
0: ansformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.norm3.weight', 'model.diffus
0: ion_model._orig_mod.input_blocks.1.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.input_blocks.1.1.proj_out.weight', 'model.diffusion_model._orig_mod.input_blocks.1.1.proj_out.bias', 'model.diffusion_model._orig_mod.input_blocks.2.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.2.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.2.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.2.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.2.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.2.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.2.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.input_blocks.2.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.input_blocks.2.1.norm.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1
0: .norm.bias', 'model.diffusion_model._orig_mod.input_blocks.2.1.proj_in.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.proj_in.bias', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.input_blocks.2.1.transf
0: ormer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.input_blocks.2.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.input_blocks.2.1.proj_out.weight', 'model.diffusion_model._orig_mod.input_bl
0: ocks.2.1.proj_out.bias', 'model.diffusion_model._orig_mod.input_blocks.3.0.op.weight', 'model.diffusion_model._orig_mod.input_blocks.3.0.op.bias', 'model.diffusion_model._orig_mod.input_blocks.4.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.4.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.4.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.4.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.4.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.4.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.4.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.input_blocks.4.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.input_blocks.4.0.skip_connection.weight', 'model.diffusion_model._orig_mod.input_blocks.4.0.skip_connection.bias', 'model.diffusion_model.
0: _orig_mod.input_blocks.4.1.norm.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.norm.bias', 'model.diffusion_model._orig_mod.input_blocks.4.1.proj_in.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.proj_in.bias', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.tra
0: nsformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_mo
0: del._orig_mod.input_blocks.4.1.proj_out.weight', 'model.diffusion_model._orig_mod.input_blocks.4.1.proj_out.bias', 'model.diffusion_model._orig_mod.input_blocks.5.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.5.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.5.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.5.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.5.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.5.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.5.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.input_blocks.5.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.input_blocks.5.1.norm.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.norm.bias', 'model.diffusion_model._orig_mod.input_blocks.5.1.proj_in.weight', 'model.dif
0: fusion_model._orig_mod.input_blocks.5.1.proj_in.bias', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.trans
0: former_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.input_blocks.5.1.proj_out.weight', 'model.diffusion_model._orig_mod.input_blocks.5.1.proj_out.bias', 'model.diffusion_model._orig_mod.input_blocks.6.0.op.weight', 'mo
0: del.diffusion_model._orig_mod.input_blocks.6.0.op.bias', 'model.diffusion_model._orig_mod.input_blocks.7.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.7.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.7.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.7.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.7.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.7.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.7.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.input_blocks.7.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.input_blocks.7.0.skip_connection.weight', 'model.diffusion_model._orig_mod.input_blocks.7.0.skip_connection.bias', 'model.diffusion_model._orig_mod.input_blocks.7.1.norm.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1
0: .norm.bias', 'model.diffusion_model._orig_mod.input_blocks.7.1.proj_in.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.proj_in.bias', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.input_blocks.7.1.transf
0: ormer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.input_blocks.7.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.input_blocks.7.1.proj_out.weight', 'model.diffusion_model._orig_mod.input_bl
0: ocks.7.1.proj_out.bias', 'model.diffusion_model._orig_mod.input_blocks.8.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.8.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.8.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.8.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.8.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.8.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.8.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.input_blocks.8.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.input_blocks.8.1.norm.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.norm.bias', 'model.diffusion_model._orig_mod.input_blocks.8.1.proj_in.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.proj_in.bias', 'model.diffusion_model._orig_mod.in
0: put_blocks.8.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.tran
0: sformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.input_blocks.8.1.proj_out.weight', 'model.diffusion_model._orig_mod.input_blocks.8.1.proj_out.bias', 'model.diffusion_model._orig_mod.input_blocks.9.0.op.weight', 'model.diffusion_model._orig_mod.input_blocks.9.0.op.bias', 'model.diffusion_model._orig_mod.
0: input_blocks.10.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.10.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.10.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.10.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.10.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.10.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.10.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.10.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.input_blocks.10.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.input_blocks.11.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.11.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.11.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.11.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.11.0.emb_la
0: yers.1.weight', 'model.diffusion_model._orig_mod.input_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.input_blocks.11.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.input_blocks.11.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.input_blocks.11.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.input_blocks.11.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.middle_block.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.middle_block.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.middle_block.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.middle_block.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.middle_block.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.middle_block.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.middle_block.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.middle_block.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.middle_block.0.out_layers.2.weight', 'model.diffusion_model._orig_mo
0: d.middle_block.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.middle_block.1.norm.weight', 'model.diffusion_model._orig_mod.middle_block.1.norm.bias', 'model.diffusion_model._orig_mod.middle_block.1.proj_in.weight', 'model.diffusion_model._orig_mod.middle_block.1.proj_in.bias', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_
0: model._orig_mod.middle_block.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.middle_block.1.transformer_blocks.0.norm3.bias', 'model.
0: diffusion_model._orig_mod.middle_block.1.proj_out.weight', 'model.diffusion_model._orig_mod.middle_block.1.proj_out.bias', 'model.diffusion_model._orig_mod.middle_block.2.in_layers.0.weight', 'model.diffusion_model._orig_mod.middle_block.2.in_layers.0.bias', 'model.diffusion_model._orig_mod.middle_block.2.in_layers.1.weight', 'model.diffusion_model._orig_mod.middle_block.2.in_layers.1.bias', 'model.diffusion_model._orig_mod.middle_block.2.emb_layers.1.weight', 'model.diffusion_model._orig_mod.middle_block.2.emb_layers.1.bias', 'model.diffusion_model._orig_mod.middle_block.2.out_layers.0.weight', 'model.diffusion_model._orig_mod.middle_block.2.out_layers.0.bias', 'model.diffusion_model._orig_mod.middle_block.2.out_layers.2.weight', 'model.diffusion_model._orig_mod.middle_block.2.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.0.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.0.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.0.0.in_layers.1.weight', '
0: model.diffusion_model._orig_mod.output_blocks.0.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.0.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.0.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.0.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.0.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.0.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.0.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.0.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.0.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.1.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.1.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.1.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.1.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.1.0.emb_layers.1.weight', 'model.diffusion
0: _model._orig_mod.output_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.1.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.1.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.1.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.1.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.1.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.1.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.2.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.2.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.2.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.2.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.2.0.out_layers.0.weight', 'model.diffusion_model._orig_m
0: od.output_blocks.2.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.2.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.2.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.2.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.2.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.2.1.conv.weight', 'model.diffusion_model._orig_mod.output_blocks.2.1.conv.bias', 'model.diffusion_model._orig_mod.output_blocks.3.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.3.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.3.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.3.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.3.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.3.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.3.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.3.0.out_layer
0: s.0.bias', 'model.diffusion_model._orig_mod.output_blocks.3.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.3.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.3.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.3.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.3.1.norm.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.norm.bias', 'model.diffusion_model._orig_mod.output_blocks.3.1.proj_in.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.proj_in.bias', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.attn1.to_out.
0: 0.bias', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.norm1.bias', 'model.diff
0: usion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.output_blocks.3.1.proj_out.weight', 'model.diffusion_model._orig_mod.output_blocks.3.1.proj_out.bias', 'model.diffusion_model._orig_mod.output_blocks.4.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.4.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.4.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.4.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.4.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.4.0.out
0: _layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.4.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.4.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.4.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.4.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.4.1.norm.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.norm.bias', 'model.diffusion_model._orig_mod.output_blocks.4.1.proj_in.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.proj_in.bias', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.attn1.t
0: o_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.norm1.bias', 'mode
0: l.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.output_blocks.4.1.proj_out.weight', 'model.diffusion_model._orig_mod.output_blocks.4.1.proj_out.bias', 'model.diffusion_model._orig_mod.output_blocks.5.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.5.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.5.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.5.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.5.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.5
0: .0.out_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.5.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.5.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.5.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.5.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.5.1.norm.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.norm.bias', 'model.diffusion_model._orig_mod.output_blocks.5.1.proj_in.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.proj_in.bias', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.a
0: ttn1.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.norm1.bias',
0:  'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.output_blocks.5.1.proj_out.weight', 'model.diffusion_model._orig_mod.output_blocks.5.1.proj_out.bias', 'model.diffusion_model._orig_mod.output_blocks.5.2.conv.weight', 'model.diffusion_model._orig_mod.output_blocks.5.2.conv.bias', 'model.diffusion_model._orig_mod.output_blocks.6.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.6.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.6.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.6.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.6.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.6.0.emb_lay
0: ers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.6.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.6.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.6.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.6.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.6.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.6.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.6.1.norm.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.norm.bias', 'model.diffusion_model._orig_mod.output_blocks.6.1.proj_in.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.proj_in.bias', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.ou
0: tput_blocks.6.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.outp
0: ut_blocks.6.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.output_blocks.6.1.proj_out.weight', 'model.diffusion_model._orig_mod.output_blocks.6.1.proj_out.bias', 'model.diffusion_model._orig_mod.output_blocks.7.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.7.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.7.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.7.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.7.0.e
0: mb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.7.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.7.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.7.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.7.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.7.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.7.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.7.1.norm.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.norm.bias', 'model.diffusion_model._orig_mod.output_blocks.7.1.proj_in.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.proj_in.bias', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_
0: mod.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mo
0: d.output_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.output_blocks.7.1.proj_out.weight', 'model.diffusion_model._orig_mod.output_blocks.7.1.proj_out.bias', 'model.diffusion_model._orig_mod.output_blocks.8.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.8.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.8.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.8.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks
0: .8.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.8.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.8.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.8.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.8.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.8.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.8.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.8.1.norm.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.norm.bias', 'model.diffusion_model._orig_mod.output_blocks.8.1.proj_in.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.proj_in.bias', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.
0: _orig_mod.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._o
0: rig_mod.output_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.output_blocks.8.1.proj_out.weight', 'model.diffusion_model._orig_mod.output_blocks.8.1.proj_out.bias', 'model.diffusion_model._orig_mod.output_blocks.8.2.conv.weight', 'model.diffusion_model._orig_mod.output_blocks.8.2.conv.bias', 'model.diffusion_model._orig_mod.output_blocks.9.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.9.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.9.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.9.0.in_l
0: ayers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.9.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.9.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.9.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.9.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.9.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.9.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.9.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.9.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.9.1.norm.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.norm.bias', 'model.diffusion_model._orig_mod.output_blocks.9.1.proj_in.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.proj_in.bias', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.a
0: ttn1.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.attn2.to_
0: out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.output_blocks.9.1.proj_out.weight', 'model.diffusion_model._orig_mod.output_blocks.9.1.proj_out.bias', 'model.diffusion_model._orig_mod.output_blocks.10.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.10.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.10.0.in_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks
0: .10.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.10.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.10.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.10.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.10.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.10.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.10.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.10.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.10.1.norm.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.norm.bias', 'model.diffusion_model._orig_mod.output_blocks.10.1.proj_in.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.proj_in.bias', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.10.
0: 1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.
0: 10.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.output_blocks.10.1.proj_out.weight', 'model.diffusion_model._orig_mod.output_blocks.10.1.proj_out.bias', 'model.diffusion_model._orig_mod.output_blocks.11.0.in_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.11.0.in_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.11.0.in_layers.1.weight', 'm
0: odel.diffusion_model._orig_mod.output_blocks.11.0.in_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model._orig_mod.output_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model._orig_mod.output_blocks.11.0.out_layers.0.weight', 'model.diffusion_model._orig_mod.output_blocks.11.0.out_layers.0.bias', 'model.diffusion_model._orig_mod.output_blocks.11.0.out_layers.2.weight', 'model.diffusion_model._orig_mod.output_blocks.11.0.out_layers.2.bias', 'model.diffusion_model._orig_mod.output_blocks.11.0.skip_connection.weight', 'model.diffusion_model._orig_mod.output_blocks.11.0.skip_connection.bias', 'model.diffusion_model._orig_mod.output_blocks.11.1.norm.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.norm.bias', 'model.diffusion_model._orig_mod.output_blocks.11.1.proj_in.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.proj_in.bias', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.attn1.to_q.weight', 'model
0: .diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight', 'mo
0: del.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model._orig_mod.output_blocks.11.1.proj_out.weight', 'model.diffusion_model._orig_mod.output_blocks.11.1.proj_out.bias', 'model.diffusion_model._orig_mod.out.0.weight', 'model.diffusion_model._orig_mod.out.0.bias', 'model.diffusion_model._orig_mod.out.1.weight', 'model.diffusion_model._orig_mod.
0: out.1.bias']
0: [NeMo I 2024-05-03 17:24:27 ddpm:305] Unexpected Keys: ['model_ema.decay', 'model_ema.num_updates']
1: [rank: 1] Seed set to 3352255575
1: Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/4
3: [rank: 3] Seed set to 2142105111
3: Initializing distributed: GLOBAL_RANK: 3, MEMBER: 4/4
0: [NeMo W 2024-05-03 17:28:21 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/configuration_validator.py:181: You have overridden `MegatronLatentDiffusion.configure_sharded_model` which is deprecated. Please override the `configure_model` hook instead. Instantiation with the newer hook will be created on the device right away and have the right data type depending on the precision setting in the Trainer.
0:     
0: [NeMo W 2024-05-03 17:28:21 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/configuration_validator.py:163: You are using the `dataloader_iter` step flavor. If you consume the iterator more than once per step, the `batch_idx` argument in any hook that takes it will not match with the batch index of the last batch consumed. This might have unforeseen effects on callbacks or code that expects to get the correct index. This will also not work well with gradient accumulation. This feature is very experimental and subject to change. Here be dragons.
0:     
0: [rank: 0] Seed set to 3837382943
0: Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/4
2: [rank: 2] Seed set to 3163487872
2: Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/4
0: ----------------------------------------------------------------------------------------------------
0: distributed_backend=nccl
0: All distributed processes registered. Starting with 4 processes
0: ----------------------------------------------------------------------------------------------------
0: 
0: [NeMo I 2024-05-03 17:28:25 main:191] Warmup allreduce with communicator at 7f30bc4aba30, size 1
0: [NeMo I 2024-05-03 17:28:48 ddpm:1977] Pipeline model parallel rank: 0, Tensor model parallel rank: 0, Number of model parameters on device: 8.66e+08. Total number of model parameters: 8.66e+08.
0: [NeMo I 2024-05-03 17:28:48 ddpm:2005] Building datasets for Stable Diffusion...
0: [NeMo I 2024-05-03 17:28:48 webdataset:145] Read Webdataset locally. Data stores at /datasets/laion-400m/webdataset-moments-filtered-encoded
0: [NeMo I 2024-05-03 17:28:48 webdataset:221] Setting nbatches=13000 for infinite sampler. world_size=4
0: [NeMo I 2024-05-03 17:28:48 webdataset:224] Total number of training shards: 832
0: [NeMo I 2024-05-03 17:28:48 webdataset:225] Total training key count: 832000
0: [NeMo I 2024-05-03 17:28:48 ddpm:2025] Length of train dataset: 832000
0: [NeMo I 2024-05-03 17:28:48 ddpm:2030] Finished building datasets for LatentDiffusion.
0: [NeMo I 2024-05-03 17:28:48 ddpm:2036] Setting up train dataloader with len(len(self._train_ds)): 832000 and consumed samples: 0
0: LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
1: LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
2: LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
3: LOCAL_RANK: 3 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
0: [NeMo I 2024-05-03 17:28:49 modelPT:724] Optimizer config = MegatronDistributedFusedAdam (
0:     Parameter Group 0
0:         betas: [0.9, 0.999]
0:         bias_correction: True
0:         eps: 1e-08
0:         lr: 2.5600000299164094e-05
0:         weight_decay: 0.0
0:     adam_w_mode: True
0:     amsgrad: False
0:     dtype: torch.float32
0:     grad_sync_dtype: torch.float16
0:     param_sync_dtype: torch.float16
0:     device: cuda:0
0:     process_group: 0x7f30bc2de630, world size 4
0:     distributed_process_group: 0x7f314e0867b0, world size 4
0:     redundant_process_group: 0x7f30bc4aba30, world size 1
0:     average_grad_sync: True
0:     overlap_grad_sync: True
0:     overlap_param_sync: False
0:     bucket_cap_mb: 288
0:     pipeline_size: 2
0:     contiguous_param_buffer: True
0:     contiguous_grad_buffer: True
0:     store_params: True
0:     store_param_remainders: False
0:     with_scaled_states: False
0:     nccl_ub: False
0:     capturable: True
0:     )
0: [NeMo I 2024-05-03 17:28:49 lr_scheduler:923] Scheduler "<nemo.core.optim.lr_scheduler.WarmupHoldPolicy object at 0x7f30bca53070>" 
0:     will be used during training (effective maximum steps = 12000) - 
0:     Parameters : 
0:     (warmup_steps: 1000
0:     hold_steps: 10000000000000
0:     max_steps: 12000
0:     )
0: :::MLLOG {"namespace": "", "time_ms": 1714724929126, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 78}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929127, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 256, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 82}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929127, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "adamw", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 86}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929127, "event_type": "POINT_IN_TIME", "key": "opt_adamw_beta_1", "value": 0.9, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 87}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929127, "event_type": "POINT_IN_TIME", "key": "opt_adamw_beta_2", "value": 0.999, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 88}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929127, "event_type": "POINT_IN_TIME", "key": "opt_adamw_epsilon", "value": 1e-08, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 89}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929127, "event_type": "POINT_IN_TIME", "key": "opt_adamw_weight_decay", "value": 0.01, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 90}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929127, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 2.56e-05, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 92}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929127, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 1000, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 93}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929127, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 6513144, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 98}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929128, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 30000, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 99}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929128, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "stable_diffusion", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 101}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929128, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Fujitsu", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 101}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929128, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 101}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929128, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 101}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929128, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "GX2560M7_H100_SXM_80GBx4", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 101}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929128, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 105}}
0: :::MLLOG {"namespace": "", "time_ms": 1714724929129, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 105}}
0: 
0:   | Name  | Type            | Params
0: ------------------------------------------
0: 0 | model | LatentDiffusion | 865 M 
0: ------------------------------------------
0: 865 M     Trainable params
0: 0         Non-trainable params
0: 865 M     Total params
0: 3,463.643 Total estimated model params size (MB)
0: SLURM auto-requeueing enabled. Setting signal handlers.
1: SLURM auto-requeueing enabled. Setting signal handlers.
2: SLURM auto-requeueing enabled. Setting signal handlers.
3: SLURM auto-requeueing enabled. Setting signal handlers.
0: [NeMo W 2024-05-03 17:28:49 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/pytorch_lightning/utilities/data.py:104: Total length of `list` across ranks is zero. Please make sure this was your intention.
0:     
0: [NeMo W 2024-05-03 17:28:49 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/pytorch_lightning/utilities/data.py:121: Your `IterableDataset` has `__len__` defined. In combination with multi-process data loading (when num_workers > 1), `__len__` could be inaccurate if each worker is not configured independently to avoid having duplicate data.
0:     
0: :::MLLOG {"namespace": "", "time_ms": 1714724944473, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 0}}
0: CUDAGraphCallback: disable autocast cache.
0: [NeMo W 2024-05-03 17:29:23 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/torch/amp/grad_scaler.py:414: FutureWarning: GradScaler is going to stop passing itself as a keyword argument to the passed optimizer. In the near future GradScaler registers `grad_scale: Tensor` and `found_inf: Tensor` to the passed optimizer and let the optimizer use them directly.
0:       warnings.warn(
0:     
0: [NeMo W 2024-05-03 17:29:23 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:213: You called `self.log('global_step', ...)` in your `optimizer_step` but the value needs to be floating to be reduced. Converting it to torch.float32. You can silence this warning by converting the value to floating point yourself. If you don't intend to reduce the value (for instance when logging the global step or epoch) then you can use `self.logger.log_metrics({'global_step': ...})` instead.
0:     
0: [NeMo W 2024-05-03 17:29:23 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:213: You called `self.log('consumed_samples', ...)` in your `optimizer_step` but the value needs to be floating to be reduced. Converting it to torch.float32. You can silence this warning by converting the value to floating point yourself. If you don't intend to reduce the value (for instance when logging the global step or epoch) then you can use `self.logger.log_metrics({'consumed_samples': ...})` instead.
0:     
0: CUDAGraphCallback: capturing CUDA graph for module MegatronLatentDiffusion.
0: CUDAGraphCallback: set optimizer.zero_grad as nop during graph capturing.
0: :::MLLOG {"namespace": "", "time_ms": 1714725013660, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 25600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725015064, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 370.01743957284395, "loss": 1.1177679331582582, "lr": 2.557442485340289e-06}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725015065, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 25600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725063926, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 51200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725065331, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 523.9326031046546, "loss": 0.8613136205372545, "lr": 5.114884970680578e-06}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725065332, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 51200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725114384, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 76800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725115797, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 521.8986093044768, "loss": 0.6779875878246163, "lr": 7.672327228647191e-06}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725115798, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 76800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725164934, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 102400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725166350, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 521.0038494812458, "loss": 0.5484213583463529, "lr": 1.0229769941361155e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725166351, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 102400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725215554, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 128000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725216974, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 520.2880891145463, "loss": 0.4834914349844216, "lr": 1.2787213563569821e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725216975, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 128000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725266207, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 153600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725267626, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 519.9833641909606, "loss": 0.4485301926582528, "lr": 1.5344654457294382e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725267627, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 153600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725316881, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 179200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725318302, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 519.7477144609712, "loss": 0.42828914214044844, "lr": 1.790209898899775e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725318303, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 179200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725367573, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 204800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725368989, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 519.5903245206474, "loss": 0.41278129164855426, "lr": 2.045953988272231e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725368990, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 204800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725418295, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 230400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725419715, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 519.2216490631196, "loss": 0.40093677119815185, "lr": 2.3016982595436275e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725419716, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 230400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725469037, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 256000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725470460, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 519.0539443810708, "loss": 0.39631198486744657, "lr": 2.5574427127139643e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 1000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725470460, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 256000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725519851, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 281600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725521276, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 518.3165647372073, "loss": 0.38604384989932716, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 1100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725521277, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 281600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725570691, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 307200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725572117, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 518.0759101595039, "loss": 0.3798094902204598, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 1200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725572118, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 307200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725621543, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 332800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725622968, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 517.9566093012402, "loss": 0.3711312447628087, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 1300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725622969, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 332800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725672396, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 358400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725673822, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 517.9380983521443, "loss": 0.3727094231527886, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 1400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725673823, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 358400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725723277, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 384000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725724698, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 517.650043129254, "loss": 0.3643127023505253, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 1500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725724699, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 384000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725774153, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 409600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725775583, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 517.6467350184204, "loss": 0.3612462961311894, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 1600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725775584, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 409600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725825031, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 435200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725826458, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 517.7269817338663, "loss": 0.3612050211071881, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 1700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725826458, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 435200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725875916, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 460800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725877343, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 517.6144590652267, "loss": 0.3552844584222531, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 1800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725877344, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 460800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725926787, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 486400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725928217, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 517.767008838667, "loss": 0.35578944804122664, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 1900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725928218, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 486400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725977648, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 512000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714725979075, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 517.8940271520177, "loss": 0.3510617793262963, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 2000}}
0: Epoch 0, global step 2000: 'timestamp' reached 1714725977647.00000 (best 1714725977647.00000), saving model to '/tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714725977647.0-step=2000-consumed_samples=512000.0.ckpt' as top 1
0: Saving /tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714725977647.0-step=2000-consumed_samples=512000.0.ckpt in the background
0: :::MLLOG {"namespace": "", "time_ms": 1714725979222, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 512000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726028719, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 537600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726030150, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 517.204591238937, "loss": 0.3518608821015084, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 2100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726030151, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 537600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726079680, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 563200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726081109, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.8702264344447, "loss": 0.3510939372239239, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 2200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726081110, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 563200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726130638, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 588800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726132066, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.8749098263316, "loss": 0.34995719559710775, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 2300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726132067, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 588800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726181580, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 614400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726183007, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 517.0417772509908, "loss": 0.34898761400279965, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 2400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726183009, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 614400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726232530, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 640000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726233957, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.9499980799563, "loss": 0.3429696239506749, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 2500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726233958, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 640000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726283494, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 665600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726284921, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.7960721595011, "loss": 0.3458602870687409, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 2600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726284922, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 665600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726334455, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 691200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726335878, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.833731226406, "loss": 0.3446218074668679, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 2700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726335879, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 691200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726385416, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 716800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726386846, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.7924856061813, "loss": 0.34282416954539113, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 2800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726386847, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 716800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726436394, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 742400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726437824, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.6816828925059, "loss": 0.3448158229678574, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 2900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726437825, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 742400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726487363, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 768000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726488791, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.7766753749457, "loss": 0.34278888359603693, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 3000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726488792, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 768000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726538366, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 793600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726539794, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3932195810357, "loss": 0.33824729581186297, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 3100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726539794, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 793600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726589377, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 819200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726590806, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3069540702029, "loss": 0.342131954586493, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 3200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726590807, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 819200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726644750, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 844800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726646179, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 474.57409169988324, "loss": 0.3411842312072983, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 3300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726646180, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 844800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726695763, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 870400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726697193, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3041818938351, "loss": 0.3412282909602757, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 3400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726697194, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 870400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726746769, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 896000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726748197, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3885771317587, "loss": 0.3402269329380627, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 3500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726748198, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 896000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726797797, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 921600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726799230, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.138811860627, "loss": 0.33792300840055506, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 3600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726799231, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 921600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726848803, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 947200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726850233, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.4184233347326, "loss": 0.3365615048130959, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 3700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726850234, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 947200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726899815, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 972800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726901241, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3284306466529, "loss": 0.3363778652885651, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 3800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726901242, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 972800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726950822, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 998400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726952255, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3326100161833, "loss": 0.33715572020022017, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 3900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714726952256, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 998400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727001832, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1024000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727003262, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3845615977779, "loss": 0.3367188229267571, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 4000}}
0: Epoch 1, global step 4000: 'timestamp' reached 1714727001831.00000 (best 1714725977647.00000), saving model to '/tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714727001831.0-step=4000-consumed_samples=1024000.0.ckpt' as top 2
0: Saving /tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714727001831.0-step=4000-consumed_samples=1024000.0.ckpt in the background
0: :::MLLOG {"namespace": "", "time_ms": 1714727003540, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1024000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727053127, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1049600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727054556, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2648016781188, "loss": 0.33830905575997583, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 4100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727054557, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1049600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727104133, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1075200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727105562, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3767483867489, "loss": 0.33159949924748156, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 4200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727105563, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1075200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727155172, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1100800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727156604, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.0370055374472, "loss": 0.3328877225012009, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 4300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727156605, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1100800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727206175, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1126400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727207606, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.4452314215232, "loss": 0.33521346710684974, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 4400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727207607, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1126400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727257183, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1152000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727258612, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3763411808, "loss": 0.3327170910942158, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 4500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727258613, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1152000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727308171, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1177600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727309602, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.5626779821464, "loss": 0.33344424867971767, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 4600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727309603, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1177600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727359180, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1203200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727360609, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3706090328153, "loss": 0.3305873837790871, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 4700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727360610, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1203200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727410174, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1228800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727411606, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.5019931614808, "loss": 0.3341191449132031, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 4800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727411607, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1228800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727461189, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1254400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727462622, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3184989851208, "loss": 0.33353004122036367, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 4900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727462623, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1254400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727512208, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1280000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727513640, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2857798997287, "loss": 0.3328190579511063, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 5000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727513641, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1280000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727563231, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1305600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727564663, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2303427958943, "loss": 0.32914008765098196, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 5100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727564664, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1305600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727614269, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1331200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727615698, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.0723579719456, "loss": 0.33426021241667525, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 5200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727615699, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1331200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727665305, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1356800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727666740, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.0646992580932, "loss": 0.33204360629870455, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 5300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727666741, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1356800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727716338, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1382400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727717768, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1585588483113, "loss": 0.3314601102107895, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 5400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727717768, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1382400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727767365, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1408000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727768790, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1654990904763, "loss": 0.33061248448684394, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 5500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727768791, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1408000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727818359, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1433600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727819790, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.4697293037143, "loss": 0.32870643287016227, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 5600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727819791, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1433600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727869368, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1459200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727870799, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3715872651667, "loss": 0.33100120213432394, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 5700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727870800, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1459200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727920379, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1484800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727921809, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3445275743036, "loss": 0.3314567151302571, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 5800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727921809, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1484800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727971377, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1510400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727972806, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.4708089609716, "loss": 0.3284051862301083, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 5900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714727972807, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1510400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728022366, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1536000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728023796, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.5502002350587, "loss": 0.3301013532053341, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 6000}}
0: Epoch 1, global step 6000: 'timestamp' reached 1714728022365.00000 (best 1714725977647.00000), saving model to '/tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714728022365.0-step=6000-consumed_samples=1536000.0.ckpt' as top 3
0: Saving /tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714728022365.0-step=6000-consumed_samples=1536000.0.ckpt in the background
0: :::MLLOG {"namespace": "", "time_ms": 1714728024086, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1536000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728073645, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1561600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728075079, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.5555211897221, "loss": 0.33006473211195037, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 6100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728075080, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1561600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728124658, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1587200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728126089, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.358751125965, "loss": 0.32498805674767806, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 6200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728126090, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1587200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728175686, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1612800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728177121, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1727542549216, "loss": 0.3295442929692055, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 6300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728177121, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1612800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728226697, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1638400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728228126, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3815755909137, "loss": 0.32606769235699884, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 6400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728228127, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1638400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728282952, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1664000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728283446, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 466.93812799216494, "loss": 0.3282879605843079, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 6500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728283447, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1664000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728333069, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1689600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728334498, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.8974572580142, "loss": 0.32808677345253073, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 6600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728334499, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1689600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728384066, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1715200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728385499, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.4715449096615, "loss": 0.32660739572074243, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 6700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728385500, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1715200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728435085, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1740800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728436517, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2819842203811, "loss": 0.3278486600515915, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 6800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728436518, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1740800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728486119, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1766400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728487551, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1164695982765, "loss": 0.3278845944994744, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 6900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728487552, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1766400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728537141, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1792000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728538573, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2335410012729, "loss": 0.3285187497665703, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 7000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728538574, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1792000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728588137, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1817600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728589566, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.5099598425363, "loss": 0.32611690195123333, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 7100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728589567, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1817600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728639154, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1843200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728640586, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2634204247547, "loss": 0.32553302439359555, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 7200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728640588, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1843200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728690186, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1868800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728691616, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1477570060966, "loss": 0.3231574598421559, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 7300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728691617, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1868800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728741196, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1894400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728742628, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3404047910979, "loss": 0.326234165744006, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 7400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728742629, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1894400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728792222, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1920000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728793653, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1962483050354, "loss": 0.32549338968940206, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 7500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728793653, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1920000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728843257, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1945600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728844687, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.0907373577024, "loss": 0.3255052533977795, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 7600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728844688, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1945600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728894314, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1971200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728895745, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.8583782259676, "loss": 0.3248984113628323, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 7700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728895746, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1971200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728945364, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 1996800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728946802, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.9354377620784, "loss": 0.3252095380687054, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 7800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728946803, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 1996800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728996397, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2022400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728997826, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1926195082949, "loss": 0.32241164838721165, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 7900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714728997827, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2022400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729047445, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2048000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729048877, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.9369285518463, "loss": 0.32489005717590413, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 8000}}
0: Epoch 2, global step 8000: 'timestamp' reached 1714729047444.00000 (best 1714725977647.00000), saving model to '/tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714729047444.0-step=8000-consumed_samples=2048000.0.ckpt' as top 4
0: Saving /tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714729047444.0-step=8000-consumed_samples=2048000.0.ckpt in the background
0: :::MLLOG {"namespace": "", "time_ms": 1714729049135, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2048000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729098739, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2073600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729100171, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.0828618620063, "loss": 0.32399837169898116, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 8100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729100172, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2073600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729149770, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2099200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729151201, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1503865961463, "loss": 0.3242776456830048, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 8200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729151202, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2099200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729200780, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2124800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729202213, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3620039463716, "loss": 0.32409686718139463, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 8300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729202214, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2124800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729251790, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2150400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729253220, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.372639650099, "loss": 0.3245084730122395, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 8400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729253221, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2150400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729302799, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2176000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729304228, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3506103705578, "loss": 0.3216249815249611, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 8500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729304229, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2176000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729353817, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2201600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729355246, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2557117715905, "loss": 0.3256651273585831, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 8600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729355247, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2201600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729404829, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2227200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729406258, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3164459153702, "loss": 0.32158622420113, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 8700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729406259, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2227200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729455832, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2252800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729457262, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.4096862840302, "loss": 0.32616305978768584, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 8800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729457263, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2252800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729506854, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2278400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729508283, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2198271869875, "loss": 0.32184947645679823, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 8900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729508284, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2278400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729557849, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2304000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729559277, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.4975990925934, "loss": 0.32206786787307135, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 9000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729559278, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2304000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729608858, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2329600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729610288, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.336097596879, "loss": 0.32261565839493717, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 9100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729610289, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2329600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729659882, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2355200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729661314, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2031181354956, "loss": 0.3225875059293984, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 9200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729661315, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2355200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729710911, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2380800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729712342, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1700461621573, "loss": 0.31941217103073183, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 9300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729712343, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2380800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729761958, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2406400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729763391, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.9695180866823, "loss": 0.325586811624503, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 9400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729763391, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2406400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729812980, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2432000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729814410, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2510502963167, "loss": 0.321000095972128, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 9500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729814411, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2432000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729864009, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2457600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729865434, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1535457634811, "loss": 0.32236526166892554, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 9600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729865435, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2457600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729915047, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2483200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729916477, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.9971997277188, "loss": 0.32293021832831503, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 9700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729916478, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2483200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729971038, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2508800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729972468, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 469.2057636284857, "loss": 0.323100697147411, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 9800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714729972469, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2508800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730022070, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2534400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730023501, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1219515020701, "loss": 0.31947213807114777, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 9900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730023502, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2534400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730073086, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2560000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730074514, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2945632796695, "loss": 0.31994790710935883, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 10000}}
0: Epoch 3, global step 10000: 'timestamp' reached 1714730073085.00000 (best 1714725977647.00000), saving model to '/tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714730073085.0-step=10000-consumed_samples=2560000.0.ckpt' as top 5
0: Saving /tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714730073085.0-step=10000-consumed_samples=2560000.0.ckpt in the background
0: :::MLLOG {"namespace": "", "time_ms": 1714730074814, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2560000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730124407, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2585600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730125838, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.21089233611, "loss": 0.32201701795902904, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 10100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730125839, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2585600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730175437, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2611200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730176866, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1467843669956, "loss": 0.3234500089725312, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 10200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730176867, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2611200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730226466, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2636800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730227891, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1340067284094, "loss": 0.3243150297158341, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 10300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730227892, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2636800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730277465, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2662400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730278898, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.4112242865759, "loss": 0.3216339460634457, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 10400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730278899, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2662400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730328503, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2688000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730329932, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.0917190452273, "loss": 0.3199348036243824, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 10500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730329933, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2688000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730379567, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2713600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730380997, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.7819012013026, "loss": 0.3209748426764821, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 10600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730380997, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2713600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730430639, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2739200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730432075, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.693384093983, "loss": 0.32075053847950635, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 10700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730432076, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2739200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730481715, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2764800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730483142, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.7225780788881, "loss": 0.31866286912782443, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 10800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730483143, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2764800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730532773, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2790400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730534204, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.8234274375247, "loss": 0.321750599504662, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 10900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730534205, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2790400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730583829, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2816000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730585260, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.8764804858813, "loss": 0.3236609235822384, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 11000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730585261, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2816000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730634895, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2841600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730636325, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 515.7763338358789, "loss": 0.3214612165729855, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 11100}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730636325, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2841600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730685927, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2867200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730687356, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1112291052054, "loss": 0.3209324232433125, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 11200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730687357, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2867200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730736958, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2892800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730738395, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1172422984974, "loss": 0.3199627272080876, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 11300}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730738395, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2892800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730787995, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2918400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730789428, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1312875644142, "loss": 0.31816049257645174, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 11400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730789428, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2918400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730839032, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2944000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730840460, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.0881936791094, "loss": 0.3192479483150889, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 11500}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730840461, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2944000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730890027, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2969600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730891457, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.4851114430123, "loss": 0.3191370741401722, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 11600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730891458, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2969600}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730941035, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 2995200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730942464, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.3639948344621, "loss": 0.3199592176866383, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 11700}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730942465, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 2995200}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730992062, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 3020800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730993491, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1618939860277, "loss": 0.3142019431165255, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 11800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730993492, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 3020800}}
0: :::MLLOG {"namespace": "", "time_ms": 1714731043086, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 3046400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714731044517, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.1912979167131, "loss": 0.31643722217742465, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 11900}}
0: :::MLLOG {"namespace": "", "time_ms": 1714731044518, "event_type": "INTERVAL_START", "key": "block_start", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 143, "samples_count": 3046400}}
0: :::MLLOG {"namespace": "", "time_ms": 1714731094103, "event_type": "INTERVAL_END", "key": "block_stop", "value": "training_step", "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 167, "samples_count": 3072000}}
0: :::MLLOG {"namespace": "", "time_ms": 1714731095532, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 516.2803624322382, "loss": 0.32234603559489905, "lr": 2.5600000299164094e-05}, "metadata": {"file": "/workspace/sd/mlperf_logging_utils.py", "lineno": 178, "step_num": 12000}}
0: Epoch 3, global step 12000: 'timestamp' reached 1714731094102.00000 (best 1714725977647.00000), saving model to '/tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714731094102.0-step=12000-consumed_samples=3072000.0.ckpt' as top 6
0: Saving /tmp/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714731094102.0-step=12000-consumed_samples=3072000.0.ckpt in the background
0: `Trainer.fit` stopped: `max_steps=12000` reached.
0: Moving checkpoints to nemologs
0: total 0
0: drwxrwxr-x 5 miwa miwa 200 May  3 17:46 stable-diffusion2-train-240503172211376963996
2: CKPT_PATH=/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/
0: CKPT_PATH=/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/
1: CKPT_PATH=/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/
3: CKPT_PATH=/nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/
3: FlashAttention Installed
3: Loaded ViT-H-14 model config.
1: FlashAttention Installed
0: FlashAttention Installed
0: [NeMo W 2024-05-03 19:12:54 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/hydra/_internal/hydra.py:119: UserWarning: Future Hydra versions will no longer change working directory at job runtime by default.
0:     See https://hydra.cc/docs/1.2/upgrades/1.1_to_1.2/changes_to_job_working_dir/ for more information.
0:       ret = run_job(
0:     
0: [NeMo W 2024-05-03 19:12:54 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
0:       warnings.warn(
0:     
0: [NeMo W 2024-05-03 19:12:54 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
0:       warnings.warn(msg)
0:     
2: FlashAttention Installed
1: Loaded ViT-H-14 model config.
0: Loaded ViT-H-14 model config.
2: Loaded ViT-H-14 model config.
3: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
1: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
0: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
2: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
0: Using 16bit Automatic Mixed Precision (AMP)
0: GPU available: True (cuda), used: True
0: TPU available: False, using: 0 TPU cores
0: IPU available: False, using: 0 IPUs
0: HPU available: False, using: 0 HPUs
0: [NeMo W 2024-05-03 19:13:03 utils:296] Loading from .ckpt checkpoint for inference is experimental! It doesn't support models with model parallelism!
3: [W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
1: [W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': False, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in
0: _channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filter
0: ed-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: Found checkpoints:
0: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714725977647.0-step=2000-consumed_samples=512000.0.ckpt
0: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714727001831.0-step=4000-consumed_samples=1024000.0.ckpt
0: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714728022365.0-step=6000-consumed_samples=1536000.0.ckpt
0: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714729047444.0-step=8000-consumed_samples=2048000.0.ckpt
0: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714730073085.0-step=10000-consumed_samples=2560000.0.ckpt
0: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714731094102.0-step=12000-consumed_samples=3072000.0.ckpt
0: [NeMo I 2024-05-03 19:13:04 megatron_init:265] Rank 0 has data parallel group : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:271] Rank 0 has combined group of data parallel and context parallel : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:276] All data parallel group ranks with context parallel combined: [[0, 1, 2, 3]]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:279] Ranks 0 has data parallel rank: 0
0: [NeMo I 2024-05-03 19:13:04 megatron_init:287] Rank 0 has context parallel group: [0]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:290] All context parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:291] Ranks 0 has context parallel rank: 0
0: [NeMo I 2024-05-03 19:13:04 megatron_init:298] Rank 0 has model parallel group: [0]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:299] All model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:308] Rank 0 has tensor model parallel group: [0]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:312] All tensor model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:313] Rank 0 has tensor model parallel rank: 0
0: [NeMo I 2024-05-03 19:13:04 megatron_init:333] Rank 0 has pipeline model parallel group: [0]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:345] Rank 0 has embedding group: [0]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:351] All pipeline model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:352] Rank 0 has pipeline model parallel rank 0
0: [NeMo I 2024-05-03 19:13:04 megatron_init:353] All embedding group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 19:13:04 megatron_init:354] Rank 0 has embedding rank: 0
0: 24-05-03 19:13:04 - PID:152230 - rank:(0, 0, 0, 0) - microbatches.py:39 - INFO - setting number of micro-batches to constant 1
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:13:04 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': False, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in
0: _channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filter
0: ed-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [NeMo I 2024-05-03 19:13:04 ddpm:130] LatentDiffusion: Running in v-prediction mode
0: [NeMo I 2024-05-03 19:13:04 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 19:13:04 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 19:13:04 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 19:13:04 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 19:13:04 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
2: [W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo I 2024-05-03 19:13:05 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:13:05 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:13:06 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:13:07 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:13:07 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:13:07 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 19:13:07 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 19:13:08 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 19:13:08 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 19:13:08 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 19:13:08 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
3: Found checkpoints:
3: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714725977647.0-step=2000-consumed_samples=512000.0.ckpt
3: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714727001831.0-step=4000-consumed_samples=1024000.0.ckpt
3: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714728022365.0-step=6000-consumed_samples=1536000.0.ckpt
3: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714729047444.0-step=8000-consumed_samples=2048000.0.ckpt
3: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714730073085.0-step=10000-consumed_samples=2560000.0.ckpt
3: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714731094102.0-step=12000-consumed_samples=3072000.0.ckpt
3: making attention of type 'vanilla' with 512 in_channels
3: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
3: making attention of type 'vanilla' with 512 in_channels
3: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
3: Loaded ViT-H-14 model config.
0: [NeMo I 2024-05-03 19:13:08 utils:92] DiffusionWrapper has 865.91 M params.
0: [NeMo I 2024-05-03 19:13:08 ddpm:168] Use system random generator since CUDA graph enabled
1: Found checkpoints:
1: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714725977647.0-step=2000-consumed_samples=512000.0.ckpt
1: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714727001831.0-step=4000-consumed_samples=1024000.0.ckpt
1: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714728022365.0-step=6000-consumed_samples=1536000.0.ckpt
1: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714729047444.0-step=8000-consumed_samples=2048000.0.ckpt
1: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714730073085.0-step=10000-consumed_samples=2560000.0.ckpt
1: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714731094102.0-step=12000-consumed_samples=3072000.0.ckpt
1: making attention of type 'vanilla' with 512 in_channels
1: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
1: making attention of type 'vanilla' with 512 in_channels
1: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
1: Loaded ViT-H-14 model config.
0: making attention of type 'vanilla' with 512 in_channels
0: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
0: making attention of type 'vanilla' with 512 in_channels
0: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
0: Loaded ViT-H-14 model config.
2: Found checkpoints:
2: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714725977647.0-step=2000-consumed_samples=512000.0.ckpt
2: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714727001831.0-step=4000-consumed_samples=1024000.0.ckpt
2: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714728022365.0-step=6000-consumed_samples=1536000.0.ckpt
2: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714729047444.0-step=8000-consumed_samples=2048000.0.ckpt
2: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714730073085.0-step=10000-consumed_samples=2560000.0.ckpt
2: /nemologs/stable-diffusion2-train-240503172211376963996/checkpoints/stable-diffusion2-train-240503172211376963996--timestamp=1714731094102.0-step=12000-consumed_samples=3072000.0.ckpt
2: making attention of type 'vanilla' with 512 in_channels
2: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
2: making attention of type 'vanilla' with 512 in_channels
2: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
2: Loaded ViT-H-14 model config.
3: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
1: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
0: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
2: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
0: [NeMo I 2024-05-03 19:13:18 ddpm:260] Loading /checkpoints/sd/512-base-ema.ckpt
0: [NeMo I 2024-05-03 19:13:18 ddpm:261] It has 1242 entries
0: [NeMo I 2024-05-03 19:13:18 ddpm:262] Existing model has 1240 entries
0: [NeMo I 2024-05-03 19:13:18 ddpm:296] Deleted 686 keys from `model.diffusion_model` state_dict.
0: [NeMo I 2024-05-03 19:13:18 ddpm:301] Restored from /checkpoints/sd/512-base-ema.ckpt with 686 missing and 2 unexpected keys
0: [NeMo I 2024-05-03 19:13:18 ddpm:303] Missing Keys: ['model.diffusion_model.time_embed.0.weight', 'model.diffusion_model.time_embed.0.bias', 'model.diffusion_model.time_embed.2.weight', 'model.diffusion_model.time_embed.2.bias', 'model.diffusion_model.input_blocks.0.0.weight', 'model.diffusion_model.input_blocks.0.0.bias', 'model.diffusion_model.input_blocks.1.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.1.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.1.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.1.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.1.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.1.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.1.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.1.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.1.1.norm.weight', 'model.diffusion_model.input_blocks.1.1
0: .norm.bias', 'model.diffusion_model.input_blocks.1.1.proj_in.weight', 'model.diffusion_model.input_blocks.1.1.proj_in.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight', 'mod
0: el.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.1.1.proj_out.weight', 'model.diffusion_model.input_blocks.1.1.proj_out.bias', 'model.diffusion_model.input_blocks.2.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.2.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.2.0.in_layers.1.weight', 'model.diffusion_model.input_block
0: s.2.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.2.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.2.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.2.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.2.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.2.1.norm.weight', 'model.diffusion_model.input_blocks.2.1.norm.bias', 'model.diffusion_model.input_blocks.2.1.proj_in.weight', 'model.diffusion_model.input_blocks.2.1.proj_in.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.bias', 'mod
0: el.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.bi
0: as', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.2.1.proj_out.weight', 'model.diffusion_model.input_blocks.2.1.proj_out.bias', 'model.diffusion_model.input_blocks.3.0.op.weight', 'model.diffusion_model.input_blocks.3.0.op.bias', 'model.diffusion_model.input_blocks.4.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.4.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.4.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.4.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.4.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.4.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.4.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.4.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.4.0.skip_co
0: nnection.weight', 'model.diffusion_model.input_blocks.4.0.skip_connection.bias', 'model.diffusion_model.input_blocks.4.1.norm.weight', 'model.diffusion_model.input_blocks.4.1.norm.bias', 'model.diffusion_model.input_blocks.4.1.proj_in.weight', 'model.diffusion_model.input_blocks.4.1.proj_in.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2
0: .bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.4.1.proj_out.weight', 'model.diffusion_model.input_blocks.4.1.proj_out.bias', 'model.diffusion_model.input_blocks.5.0.i
0: n_layers.0.weight', 'model.diffusion_model.input_blocks.5.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.5.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.5.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.5.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.5.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.5.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.5.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.5.1.norm.weight', 'model.diffusion_model.input_blocks.5.1.norm.bias', 'model.diffusion_model.input_blocks.5.1.proj_in.weight', 'model.diffusion_model.input_blocks.5.1.proj_in.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_v.weight'
0: , 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.5.1.trans
0: former_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.5.1.proj_out.weight', 'model.diffusion_model.input_blocks.5.1.proj_out.bias', 'model.diffusion_model.input_blocks.6.0.op.weight', 'model.diffusion_model.input_blocks.6.0.op.bias', 'model.diffusion_model.input_blocks.7.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.7.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.7.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.7.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.7.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.7.0.out_layers.0.bi
0: as', 'model.diffusion_model.input_blocks.7.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.7.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.7.0.skip_connection.weight', 'model.diffusion_model.input_blocks.7.0.skip_connection.bias', 'model.diffusion_model.input_blocks.7.1.norm.weight', 'model.diffusion_model.input_blocks.7.1.norm.bias', 'model.diffusion_model.input_blocks.7.1.proj_in.weight', 'model.diffusion_model.input_blocks.7.1.proj_in.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.7.1.transformer_bloc
0: ks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blo
0: cks.0.norm3.bias', 'model.diffusion_model.input_blocks.7.1.proj_out.weight', 'model.diffusion_model.input_blocks.7.1.proj_out.bias', 'model.diffusion_model.input_blocks.8.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.8.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.8.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.8.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.8.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.8.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.8.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.8.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.8.1.norm.weight', 'model.diffusion_model.input_blocks.8.1.norm.bias', 'model.diffusion_model.input_blocks.8.1.proj_in.weight', 'model.diffusion_model.input_blocks.8.1.proj_in.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.
0: to_q.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_b
0: locks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.8.1.proj_out.weight', 'model.diffusion_model.input_blocks.8.1.proj_out.bias', 'model.diffusion_model.input_blocks.9.0.op.weight', 'model.diffusion_model.input_blocks.9.0.op.bias', 'model.diffusion_model.input_blocks.10.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.10.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.10.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.10.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.10.0.emb_layers.1.weight'
0: , 'model.diffusion_model.input_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.10.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.10.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.10.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.10.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.11.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.11.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.11.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.11.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.11.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.11.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.11.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.11.0.out_layers.2.bias', 'model.diffusion_model.middle_block.0.in_layers.0.weight', 'model.diffusion_model.middle_block.0.
0: in_layers.0.bias', 'model.diffusion_model.middle_block.0.in_layers.1.weight', 'model.diffusion_model.middle_block.0.in_layers.1.bias', 'model.diffusion_model.middle_block.0.emb_layers.1.weight', 'model.diffusion_model.middle_block.0.emb_layers.1.bias', 'model.diffusion_model.middle_block.0.out_layers.0.weight', 'model.diffusion_model.middle_block.0.out_layers.0.bias', 'model.diffusion_model.middle_block.0.out_layers.2.weight', 'model.diffusion_model.middle_block.0.out_layers.2.bias', 'model.diffusion_model.middle_block.1.norm.weight', 'model.diffusion_model.middle_block.1.norm.bias', 'model.diffusion_model.middle_block.1.proj_in.weight', 'model.diffusion_model.middle_block.1.proj_in.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.weight', 'mode
0: l.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm2.weight', 'model.diffus
0: ion_model.middle_block.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.middle_block.1.proj_out.weight', 'model.diffusion_model.middle_block.1.proj_out.bias', 'model.diffusion_model.middle_block.2.in_layers.0.weight', 'model.diffusion_model.middle_block.2.in_layers.0.bias', 'model.diffusion_model.middle_block.2.in_layers.1.weight', 'model.diffusion_model.middle_block.2.in_layers.1.bias', 'model.diffusion_model.middle_block.2.emb_layers.1.weight', 'model.diffusion_model.middle_block.2.emb_layers.1.bias', 'model.diffusion_model.middle_block.2.out_layers.0.weight', 'model.diffusion_model.middle_block.2.out_layers.0.bias', 'model.diffusion_model.middle_block.2.out_layers.2.weight', 'model.diffusion_model.middle_block.2.out_layers.2.bias', 'model.diffusion_model.output_blocks.0.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.0.0.in_layers.0.bias', '
0: model.diffusion_model.output_blocks.0.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.0.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.0.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.0.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.0.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.0.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.0.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.0.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.0.0.skip_connection.weight', 'model.diffusion_model.output_blocks.0.0.skip_connection.bias', 'model.diffusion_model.output_blocks.1.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.1.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.1.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.1.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model.output_blo
0: cks.1.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.1.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.1.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.1.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.1.0.skip_connection.weight', 'model.diffusion_model.output_blocks.1.0.skip_connection.bias', 'model.diffusion_model.output_blocks.2.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.2.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.2.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.2.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.2.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.2.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.2.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.2.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.2.0.skip_connection.weight
0: ', 'model.diffusion_model.output_blocks.2.0.skip_connection.bias', 'model.diffusion_model.output_blocks.2.1.conv.weight', 'model.diffusion_model.output_blocks.2.1.conv.bias', 'model.diffusion_model.output_blocks.3.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.3.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.3.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.3.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.3.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.3.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.3.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.3.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.3.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.3.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.3.0.skip_connection.weight', 'model.diffusion_model.output_blocks.3.0.skip_connection.bias', 'model.diffusion_model.output_blocks.3.1.norm.weight', 'model.diffusion_model.output_blocks.3.1.norm.bi
0: as', 'model.diffusion_model.output_blocks.3.1.proj_in.weight', 'model.diffusion_model.output_blocks.3.1.proj_in.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight',
0:  'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.3.1.proj_out.weight', 'model.diffusion_model.output_blocks.3.1.proj_out.bias', 'model.diffusion_model.output_blocks.4.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.4.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.4.0.in_layers.1.weight', 'model.diffusio
0: n_model.output_blocks.4.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.4.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.4.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.4.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.4.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.4.0.skip_connection.weight', 'model.diffusion_model.output_blocks.4.0.skip_connection.bias', 'model.diffusion_model.output_blocks.4.1.norm.weight', 'model.diffusion_model.output_blocks.4.1.norm.bias', 'model.diffusion_model.output_blocks.4.1.proj_in.weight', 'model.diffusion_model.output_blocks.4.1.proj_in.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.di
0: ffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.4.1.tra
0: nsformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.4.1.proj_out.weight', 'model.diffusion_model.output_blocks.4.1.proj_out.bias', 'model.diffusion_model.output_blocks.5.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.5.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.5.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.5.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.5.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.5.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.5.0.out_layers.2.weight', 'model.diffusion_m
0: odel.output_blocks.5.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.5.0.skip_connection.weight', 'model.diffusion_model.output_blocks.5.0.skip_connection.bias', 'model.diffusion_model.output_blocks.5.1.norm.weight', 'model.diffusion_model.output_blocks.5.1.norm.bias', 'model.diffusion_model.output_blocks.5.1.proj_in.weight', 'model.diffusion_model.output_blocks.5.1.proj_in.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.5.1.tran
0: sformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.5.
0: 1.proj_out.weight', 'model.diffusion_model.output_blocks.5.1.proj_out.bias', 'model.diffusion_model.output_blocks.5.2.conv.weight', 'model.diffusion_model.output_blocks.5.2.conv.bias', 'model.diffusion_model.output_blocks.6.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.6.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.6.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.6.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.6.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.6.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.6.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.6.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.6.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.6.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.6.0.skip_connection.weight', 'model.diffusion_model.output_blocks.6.0.skip_connection.bias', 'model.diffusion_model.output_blocks.6.1.norm.weight', 'model.diffusion_model.output_blocks.6
0: .1.norm.bias', 'model.diffusion_model.output_blocks.6.1.proj_in.weight', 'model.diffusion_model.output_blocks.6.1.proj_in.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_
0: k.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.6.1.proj_out.weight', 'model.diffusion_model.output_blocks.6.1.proj_out.bias', 'model.diffusion_model.output_blocks.7.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.7.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.7.0.in_layers.1.weight', 'mode
0: l.diffusion_model.output_blocks.7.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.7.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.7.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.7.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.7.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.7.0.skip_connection.weight', 'model.diffusion_model.output_blocks.7.0.skip_connection.bias', 'model.diffusion_model.output_blocks.7.1.norm.weight', 'model.diffusion_model.output_blocks.7.1.norm.bias', 'model.diffusion_model.output_blocks.7.1.proj_in.weight', 'model.diffusion_model.output_blocks.7.1.proj_in.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_v.weight',
0:  'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_bloc
0: ks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.7.1.proj_out.weight', 'model.diffusion_model.output_blocks.7.1.proj_out.bias', 'model.diffusion_model.output_blocks.8.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.8.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.8.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.8.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.8.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.8.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.8.0.out_layers.2.weight', 'model.d
0: iffusion_model.output_blocks.8.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.8.0.skip_connection.weight', 'model.diffusion_model.output_blocks.8.0.skip_connection.bias', 'model.diffusion_model.output_blocks.8.1.norm.weight', 'model.diffusion_model.output_blocks.8.1.norm.bias', 'model.diffusion_model.output_blocks.8.1.proj_in.weight', 'model.diffusion_model.output_blocks.8.1.proj_in.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_block
0: s.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output
0: _blocks.8.1.proj_out.weight', 'model.diffusion_model.output_blocks.8.1.proj_out.bias', 'model.diffusion_model.output_blocks.8.2.conv.weight', 'model.diffusion_model.output_blocks.8.2.conv.bias', 'model.diffusion_model.output_blocks.9.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.9.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.9.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.9.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.9.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.9.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.9.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.9.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.9.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.9.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.9.0.skip_connection.weight', 'model.diffusion_model.output_blocks.9.0.skip_connection.bias', 'model.diffusion_model.output_blocks.9.1.norm.weight', 'model.diffusion_model.outpu
0: t_blocks.9.1.norm.bias', 'model.diffusion_model.output_blocks.9.1.proj_in.weight', 'model.diffusion_model.output_blocks.9.1.proj_in.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0
0: .attn2.to_k.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.9.1.proj_out.weight', 'model.diffusion_model.output_blocks.9.1.proj_out.bias', 'model.diffusion_model.output_blocks.10.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.10.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.10.0.in_layers.1.w
0: eight', 'model.diffusion_model.output_blocks.10.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.10.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.10.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.10.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.10.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.10.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.10.0.skip_connection.weight', 'model.diffusion_model.output_blocks.10.0.skip_connection.bias', 'model.diffusion_model.output_blocks.10.1.norm.weight', 'model.diffusion_model.output_blocks.10.1.norm.bias', 'model.diffusion_model.output_blocks.10.1.proj_in.weight', 'model.diffusion_model.output_blocks.10.1.proj_in.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.10.1.transformer
0: _blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.we
0: ight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.10.1.proj_out.weight', 'model.diffusion_model.output_blocks.10.1.proj_out.bias', 'model.diffusion_model.output_blocks.11.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.11.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.11.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.11.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.11.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.11.0.out_layers.0.bias', 'model.diffusio
0: n_model.output_blocks.11.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.11.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.11.0.skip_connection.weight', 'model.diffusion_model.output_blocks.11.0.skip_connection.bias', 'model.diffusion_model.output_blocks.11.1.norm.weight', 'model.diffusion_model.output_blocks.11.1.norm.bias', 'model.diffusion_model.output_blocks.11.1.proj_in.weight', 'model.diffusion_model.output_blocks.11.1.proj_in.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.11.1.transf
0: ormer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm3.weight', 'model.diffusion_mode
0: l.output_blocks.11.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.11.1.proj_out.weight', 'model.diffusion_model.output_blocks.11.1.proj_out.bias', 'model.diffusion_model.out.0.weight', 'model.diffusion_model.out.0.bias', 'model.diffusion_model.out.1.weight', 'model.diffusion_model.out.1.bias']
0: [NeMo I 2024-05-03 19:13:18 ddpm:305] Unexpected Keys: ['model_ema.decay', 'model_ema.num_updates']
0: Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/4
3: Initializing distributed: GLOBAL_RANK: 3, MEMBER: 4/4
1: Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/4
2: Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/4
0: ----------------------------------------------------------------------------------------------------
0: distributed_backend=nccl
0: All distributed processes registered. Starting with 4 processes
0: ----------------------------------------------------------------------------------------------------
0: 
0: Global ID: 0, local ID: 0, world size: 4
0: Rank 0 before barrier
1: Global ID: 1, local ID: 1, world size: 4
1: Rank 1 before barrier
2: Global ID: 2, local ID: 2, world size: 4
2: Rank 2 before barrier
3: Global ID: 3, local ID: 3, world size: 4
3: Rank 3 before barrier
0: :::MLLOG {"namespace": "", "time_ms": 1714731217732, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 127, "samples_count": 512000}}
0: Assigned 7500 prompts for this worker.
0: :::MLLOG {"namespace": "", "time_ms": 1714733486053, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 184, "samples_count": 512000}}
3: Assigned 7500 prompts for this worker.
1: Assigned 7500 prompts for this worker.
2: Assigned 7500 prompts for this worker.
0: Calculating FID activations:   0%|          | 0/235 [00:00<?, ?it/s]Calculating FID activations:   0%|          | 1/235 [00:01<04:34,  1.17s/it]Calculating FID activations:   4%|▍         | 10/235 [00:01<00:23,  9.46it/s]Calculating FID activations:   6%|▌         | 14/235 [00:01<00:17, 12.35it/s]Calculating FID activations:   8%|▊         | 18/235 [00:01<00:14, 14.87it/s]Calculating FID activations:   9%|▉         | 22/235 [00:01<00:12, 17.25it/s]Calculating FID activations:  11%|█         | 26/235 [00:02<00:10, 19.22it/s]Calculating FID activations:  13%|█▎        | 30/235 [00:02<00:09, 20.71it/s]Calculating FID activations:  14%|█▍        | 34/235 [00:02<00:09, 21.65it/s]Calculating FID activations:  16%|█▌        | 38/235 [00:02<00:08, 22.67it/s]Calculating FID activations:  18%|█▊        | 42/235 [00:02<00:07, 24.40it/s]Calculating FID activations:  20%|█▉        | 46/235 [00:02<00:07, 23.79it/s]Calculating FID activations:  21%|██▏       | 50/235 [00:02<0
0: 0:07, 24.17it/s]Calculating FID activations:  23%|██▎       | 54/235 [00:03<00:07, 24.65it/s]Calculating FID activations:  25%|██▍       | 58/235 [00:03<00:07, 24.82it/s]Calculating FID activations:  26%|██▋       | 62/235 [00:03<00:06, 26.12it/s]Calculating FID activations:  28%|██▊       | 66/235 [00:03<00:06, 24.89it/s]Calculating FID activations:  30%|██▉       | 70/235 [00:03<00:06, 24.99it/s]Calculating FID activations:  31%|███▏      | 74/235 [00:03<00:06, 24.62it/s]Calculating FID activations:  33%|███▎      | 78/235 [00:04<00:05, 26.47it/s]Calculating FID activations:  35%|███▍      | 82/235 [00:04<00:06, 25.49it/s]Calculating FID activations:  37%|███▋      | 86/235 [00:04<00:05, 28.20it/s]Calculating FID activations:  39%|███▊      | 91/235 [00:04<00:04, 32.83it/s]Calculating FID activations:  41%|████      | 96/235 [00:04<00:03, 36.24it/s]Calculating FID activations:  43%|████▎     | 101/235 [00:04<
0: 00:03, 38.54it/s]Calculating FID activations:  45%|████▌     | 106/235 [00:04<00:03, 37.20it/s]Calculating FID activations:  47%|████▋     | 111/235 [00:04<00:03, 39.32it/s]Calculating FID activations:  49%|████▉     | 116/235 [00:05<00:02, 40.78it/s]Calculating FID activations:  51%|█████▏    | 121/235 [00:05<00:02, 41.56it/s]Calculating FID activations:  54%|█████▎    | 126/235 [00:05<00:02, 38.54it/s]Calculating FID activations:  55%|█████▌    | 130/235 [00:05<00:02, 38.89it/s]Calculating FID activations:  57%|█████▋    | 134/235 [00:05<00:02, 38.45it/s]Calculating FID activations:  59%|█████▉    | 139/235 [00:05<00:02, 40.33it/s]Calculating FID activations:  61%|██████▏   | 144/235 [00:05<00:02, 41.45it/s]Calculating FID activations:  63%|██████▎   | 149/235 [00:05<00:02, 41.98it/s]Calculating FID activations:  66%|██████▌   | 154/235 [00:05<00:02, 38.63it/s]Calcu
0: lating FID activations:  68%|██████▊   | 159/235 [00:06<00:01, 40.22it/s]Calculating FID activations:  70%|██████▉   | 164/235 [00:06<00:01, 41.46it/s]Calculating FID activations:  72%|███████▏  | 169/235 [00:06<00:01, 42.20it/s]Calculating FID activations:  74%|███████▍  | 174/235 [00:06<00:01, 38.49it/s]Calculating FID activations:  76%|███████▌  | 179/235 [00:06<00:01, 40.07it/s]Calculating FID activations:  78%|███████▊  | 184/235 [00:06<00:01, 42.10it/s]Calculating FID activations:  80%|████████  | 189/235 [00:06<00:01, 42.39it/s]Calculating FID activations:  83%|████████▎ | 194/235 [00:06<00:01, 38.88it/s]Calculating FID activations:  85%|████████▍ | 199/235 [00:07<00:00, 40.78it/s]Calculating FID activations:  87%|████████▋ | 204/235 [00:07<00:00, 42.32it/s]Calculating FID activations:  89%|████████▉ | 209/235 [00:0
0: 7<00:00, 42.58it/s]Calculating FID activations:  91%|█████████ | 214/235 [00:07<00:00, 39.60it/s]Calculating FID activations:  93%|█████████▎| 219/235 [00:07<00:00, 41.18it/s]Calculating FID activations:  95%|█████████▌| 224/235 [00:07<00:00, 42.30it/s]Calculating FID activations:  97%|█████████▋| 229/235 [00:07<00:00, 43.17it/s]Calculating FID activations: 100%|█████████▉| 234/235 [00:07<00:00, 39.86it/s]Calculating FID activations: 100%|██████████| 235/235 [00:08<00:00, 27.72it/s]
0: Computed feature activations of size torch.Size([7500, 2048])
0: :::MLLOG {"namespace": "", "time_ms": 1714733514492, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 234.69405247265308, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 228, "samples_count": 512000, "metric": "FID"}}
0: :::MLLOG {"namespace": "", "time_ms": 1714733619783, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.0696653351187706, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 258, "samples_count": 512000, "metric": "CLIP"}}
0: Using 16bit Automatic Mixed Precision (AMP)
0: GPU available: True (cuda), used: True
0: TPU available: False, using: 0 TPU cores
0: IPU available: False, using: 0 IPUs
0: HPU available: False, using: 0 HPUs
0: [NeMo W 2024-05-03 19:53:39 utils:296] Loading from .ckpt checkpoint for inference is experimental! It doesn't support models with model parallelism!
2: [rank2]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
3: [rank3]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': False, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in
0: _channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filter
0: ed-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [rank0]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo I 2024-05-03 19:53:41 megatron_init:265] Rank 0 has data parallel group : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:271] Rank 0 has combined group of data parallel and context parallel : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:276] All data parallel group ranks with context parallel combined: [[0, 1, 2, 3]]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:279] Ranks 0 has data parallel rank: 0
0: [NeMo I 2024-05-03 19:53:41 megatron_init:287] Rank 0 has context parallel group: [0]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:290] All context parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:291] Ranks 0 has context parallel rank: 0
0: [NeMo I 2024-05-03 19:53:41 megatron_init:298] Rank 0 has model parallel group: [0]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:299] All model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:308] Rank 0 has tensor model parallel group: [0]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:312] All tensor model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:313] Rank 0 has tensor model parallel rank: 0
0: [NeMo I 2024-05-03 19:53:41 megatron_init:333] Rank 0 has pipeline model parallel group: [0]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:345] Rank 0 has embedding group: [0]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:351] All pipeline model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:352] Rank 0 has pipeline model parallel rank 0
0: [NeMo I 2024-05-03 19:53:41 megatron_init:353] All embedding group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 19:53:41 megatron_init:354] Rank 0 has embedding rank: 0
1: [rank1]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 19:53:41 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': False, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in
0: _channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filter
0: ed-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [NeMo I 2024-05-03 19:53:41 ddpm:130] LatentDiffusion: Running in v-prediction mode
0: [NeMo I 2024-05-03 19:53:41 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 19:53:41 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 19:53:41 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 19:53:41 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 19:53:41 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:53:42 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:53:42 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:53:44 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:53:44 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:53:44 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 19:53:44 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 19:53:45 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 19:53:45 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 19:53:45 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 19:53:45 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 19:53:45 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 19:53:45 utils:92] DiffusionWrapper has 865.91 M params.
0: [NeMo I 2024-05-03 19:53:45 ddpm:168] Use system random generator since CUDA graph enabled
0: making attention of type 'vanilla' with 512 in_channels
0: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
0: making attention of type 'vanilla' with 512 in_channels
0: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
0: Loaded ViT-H-14 model config.
2: Computed feature activations of size torch.Size([7500, 2048])
2: making attention of type 'vanilla' with 512 in_channels
2: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
2: making attention of type 'vanilla' with 512 in_channels
2: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
2: Loaded ViT-H-14 model config.
3: Computed feature activations of size torch.Size([7500, 2048])
3: making attention of type 'vanilla' with 512 in_channels
3: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
3: making attention of type 'vanilla' with 512 in_channels
3: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
3: Loaded ViT-H-14 model config.
1: Computed feature activations of size torch.Size([7500, 2048])
1: making attention of type 'vanilla' with 512 in_channels
1: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
1: making attention of type 'vanilla' with 512 in_channels
1: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
1: Loaded ViT-H-14 model config.
0: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
2: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
3: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
1: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
0: [NeMo I 2024-05-03 19:53:54 ddpm:260] Loading /checkpoints/sd/512-base-ema.ckpt
0: [NeMo I 2024-05-03 19:53:54 ddpm:261] It has 1242 entries
0: [NeMo I 2024-05-03 19:53:54 ddpm:262] Existing model has 1240 entries
0: [NeMo I 2024-05-03 19:53:54 ddpm:296] Deleted 686 keys from `model.diffusion_model` state_dict.
0: [NeMo I 2024-05-03 19:53:55 ddpm:301] Restored from /checkpoints/sd/512-base-ema.ckpt with 686 missing and 2 unexpected keys
0: [NeMo I 2024-05-03 19:53:55 ddpm:303] Missing Keys: ['model.diffusion_model.time_embed.0.weight', 'model.diffusion_model.time_embed.0.bias', 'model.diffusion_model.time_embed.2.weight', 'model.diffusion_model.time_embed.2.bias', 'model.diffusion_model.input_blocks.0.0.weight', 'model.diffusion_model.input_blocks.0.0.bias', 'model.diffusion_model.input_blocks.1.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.1.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.1.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.1.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.1.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.1.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.1.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.1.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.1.1.norm.weight', 'model.diffusion_model.input_blocks.1.1
0: .norm.bias', 'model.diffusion_model.input_blocks.1.1.proj_in.weight', 'model.diffusion_model.input_blocks.1.1.proj_in.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight', 'mod
0: el.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.1.1.proj_out.weight', 'model.diffusion_model.input_blocks.1.1.proj_out.bias', 'model.diffusion_model.input_blocks.2.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.2.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.2.0.in_layers.1.weight', 'model.diffusion_model.input_block
0: s.2.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.2.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.2.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.2.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.2.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.2.1.norm.weight', 'model.diffusion_model.input_blocks.2.1.norm.bias', 'model.diffusion_model.input_blocks.2.1.proj_in.weight', 'model.diffusion_model.input_blocks.2.1.proj_in.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.bias', 'mod
0: el.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.bi
0: as', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.2.1.proj_out.weight', 'model.diffusion_model.input_blocks.2.1.proj_out.bias', 'model.diffusion_model.input_blocks.3.0.op.weight', 'model.diffusion_model.input_blocks.3.0.op.bias', 'model.diffusion_model.input_blocks.4.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.4.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.4.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.4.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.4.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.4.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.4.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.4.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.4.0.skip_co
0: nnection.weight', 'model.diffusion_model.input_blocks.4.0.skip_connection.bias', 'model.diffusion_model.input_blocks.4.1.norm.weight', 'model.diffusion_model.input_blocks.4.1.norm.bias', 'model.diffusion_model.input_blocks.4.1.proj_in.weight', 'model.diffusion_model.input_blocks.4.1.proj_in.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2
0: .bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.4.1.proj_out.weight', 'model.diffusion_model.input_blocks.4.1.proj_out.bias', 'model.diffusion_model.input_blocks.5.0.i
0: n_layers.0.weight', 'model.diffusion_model.input_blocks.5.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.5.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.5.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.5.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.5.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.5.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.5.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.5.1.norm.weight', 'model.diffusion_model.input_blocks.5.1.norm.bias', 'model.diffusion_model.input_blocks.5.1.proj_in.weight', 'model.diffusion_model.input_blocks.5.1.proj_in.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_v.weight'
0: , 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.5.1.trans
0: former_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.5.1.proj_out.weight', 'model.diffusion_model.input_blocks.5.1.proj_out.bias', 'model.diffusion_model.input_blocks.6.0.op.weight', 'model.diffusion_model.input_blocks.6.0.op.bias', 'model.diffusion_model.input_blocks.7.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.7.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.7.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.7.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.7.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.7.0.out_layers.0.bi
0: as', 'model.diffusion_model.input_blocks.7.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.7.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.7.0.skip_connection.weight', 'model.diffusion_model.input_blocks.7.0.skip_connection.bias', 'model.diffusion_model.input_blocks.7.1.norm.weight', 'model.diffusion_model.input_blocks.7.1.norm.bias', 'model.diffusion_model.input_blocks.7.1.proj_in.weight', 'model.diffusion_model.input_blocks.7.1.proj_in.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.7.1.transformer_bloc
0: ks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blo
0: cks.0.norm3.bias', 'model.diffusion_model.input_blocks.7.1.proj_out.weight', 'model.diffusion_model.input_blocks.7.1.proj_out.bias', 'model.diffusion_model.input_blocks.8.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.8.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.8.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.8.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.8.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.8.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.8.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.8.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.8.1.norm.weight', 'model.diffusion_model.input_blocks.8.1.norm.bias', 'model.diffusion_model.input_blocks.8.1.proj_in.weight', 'model.diffusion_model.input_blocks.8.1.proj_in.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.
0: to_q.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_b
0: locks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.8.1.proj_out.weight', 'model.diffusion_model.input_blocks.8.1.proj_out.bias', 'model.diffusion_model.input_blocks.9.0.op.weight', 'model.diffusion_model.input_blocks.9.0.op.bias', 'model.diffusion_model.input_blocks.10.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.10.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.10.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.10.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.10.0.emb_layers.1.weight'
0: , 'model.diffusion_model.input_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.10.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.10.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.10.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.10.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.11.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.11.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.11.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.11.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.11.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.11.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.11.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.11.0.out_layers.2.bias', 'model.diffusion_model.middle_block.0.in_layers.0.weight', 'model.diffusion_model.middle_block.0.
0: in_layers.0.bias', 'model.diffusion_model.middle_block.0.in_layers.1.weight', 'model.diffusion_model.middle_block.0.in_layers.1.bias', 'model.diffusion_model.middle_block.0.emb_layers.1.weight', 'model.diffusion_model.middle_block.0.emb_layers.1.bias', 'model.diffusion_model.middle_block.0.out_layers.0.weight', 'model.diffusion_model.middle_block.0.out_layers.0.bias', 'model.diffusion_model.middle_block.0.out_layers.2.weight', 'model.diffusion_model.middle_block.0.out_layers.2.bias', 'model.diffusion_model.middle_block.1.norm.weight', 'model.diffusion_model.middle_block.1.norm.bias', 'model.diffusion_model.middle_block.1.proj_in.weight', 'model.diffusion_model.middle_block.1.proj_in.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.weight', 'mode
0: l.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm2.weight', 'model.diffus
0: ion_model.middle_block.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.middle_block.1.proj_out.weight', 'model.diffusion_model.middle_block.1.proj_out.bias', 'model.diffusion_model.middle_block.2.in_layers.0.weight', 'model.diffusion_model.middle_block.2.in_layers.0.bias', 'model.diffusion_model.middle_block.2.in_layers.1.weight', 'model.diffusion_model.middle_block.2.in_layers.1.bias', 'model.diffusion_model.middle_block.2.emb_layers.1.weight', 'model.diffusion_model.middle_block.2.emb_layers.1.bias', 'model.diffusion_model.middle_block.2.out_layers.0.weight', 'model.diffusion_model.middle_block.2.out_layers.0.bias', 'model.diffusion_model.middle_block.2.out_layers.2.weight', 'model.diffusion_model.middle_block.2.out_layers.2.bias', 'model.diffusion_model.output_blocks.0.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.0.0.in_layers.0.bias', '
0: model.diffusion_model.output_blocks.0.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.0.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.0.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.0.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.0.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.0.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.0.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.0.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.0.0.skip_connection.weight', 'model.diffusion_model.output_blocks.0.0.skip_connection.bias', 'model.diffusion_model.output_blocks.1.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.1.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.1.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.1.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model.output_blo
0: cks.1.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.1.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.1.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.1.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.1.0.skip_connection.weight', 'model.diffusion_model.output_blocks.1.0.skip_connection.bias', 'model.diffusion_model.output_blocks.2.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.2.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.2.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.2.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.2.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.2.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.2.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.2.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.2.0.skip_connection.weight
0: ', 'model.diffusion_model.output_blocks.2.0.skip_connection.bias', 'model.diffusion_model.output_blocks.2.1.conv.weight', 'model.diffusion_model.output_blocks.2.1.conv.bias', 'model.diffusion_model.output_blocks.3.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.3.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.3.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.3.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.3.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.3.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.3.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.3.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.3.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.3.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.3.0.skip_connection.weight', 'model.diffusion_model.output_blocks.3.0.skip_connection.bias', 'model.diffusion_model.output_blocks.3.1.norm.weight', 'model.diffusion_model.output_blocks.3.1.norm.bi
0: as', 'model.diffusion_model.output_blocks.3.1.proj_in.weight', 'model.diffusion_model.output_blocks.3.1.proj_in.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight',
0:  'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.3.1.proj_out.weight', 'model.diffusion_model.output_blocks.3.1.proj_out.bias', 'model.diffusion_model.output_blocks.4.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.4.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.4.0.in_layers.1.weight', 'model.diffusio
0: n_model.output_blocks.4.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.4.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.4.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.4.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.4.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.4.0.skip_connection.weight', 'model.diffusion_model.output_blocks.4.0.skip_connection.bias', 'model.diffusion_model.output_blocks.4.1.norm.weight', 'model.diffusion_model.output_blocks.4.1.norm.bias', 'model.diffusion_model.output_blocks.4.1.proj_in.weight', 'model.diffusion_model.output_blocks.4.1.proj_in.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.di
0: ffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.4.1.tra
0: nsformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.4.1.proj_out.weight', 'model.diffusion_model.output_blocks.4.1.proj_out.bias', 'model.diffusion_model.output_blocks.5.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.5.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.5.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.5.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.5.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.5.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.5.0.out_layers.2.weight', 'model.diffusion_m
0: odel.output_blocks.5.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.5.0.skip_connection.weight', 'model.diffusion_model.output_blocks.5.0.skip_connection.bias', 'model.diffusion_model.output_blocks.5.1.norm.weight', 'model.diffusion_model.output_blocks.5.1.norm.bias', 'model.diffusion_model.output_blocks.5.1.proj_in.weight', 'model.diffusion_model.output_blocks.5.1.proj_in.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.5.1.tran
0: sformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.5.
0: 1.proj_out.weight', 'model.diffusion_model.output_blocks.5.1.proj_out.bias', 'model.diffusion_model.output_blocks.5.2.conv.weight', 'model.diffusion_model.output_blocks.5.2.conv.bias', 'model.diffusion_model.output_blocks.6.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.6.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.6.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.6.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.6.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.6.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.6.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.6.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.6.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.6.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.6.0.skip_connection.weight', 'model.diffusion_model.output_blocks.6.0.skip_connection.bias', 'model.diffusion_model.output_blocks.6.1.norm.weight', 'model.diffusion_model.output_blocks.6
0: .1.norm.bias', 'model.diffusion_model.output_blocks.6.1.proj_in.weight', 'model.diffusion_model.output_blocks.6.1.proj_in.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_
0: k.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.6.1.proj_out.weight', 'model.diffusion_model.output_blocks.6.1.proj_out.bias', 'model.diffusion_model.output_blocks.7.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.7.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.7.0.in_layers.1.weight', 'mode
0: l.diffusion_model.output_blocks.7.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.7.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.7.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.7.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.7.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.7.0.skip_connection.weight', 'model.diffusion_model.output_blocks.7.0.skip_connection.bias', 'model.diffusion_model.output_blocks.7.1.norm.weight', 'model.diffusion_model.output_blocks.7.1.norm.bias', 'model.diffusion_model.output_blocks.7.1.proj_in.weight', 'model.diffusion_model.output_blocks.7.1.proj_in.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_v.weight',
0:  'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_bloc
0: ks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.7.1.proj_out.weight', 'model.diffusion_model.output_blocks.7.1.proj_out.bias', 'model.diffusion_model.output_blocks.8.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.8.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.8.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.8.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.8.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.8.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.8.0.out_layers.2.weight', 'model.d
0: iffusion_model.output_blocks.8.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.8.0.skip_connection.weight', 'model.diffusion_model.output_blocks.8.0.skip_connection.bias', 'model.diffusion_model.output_blocks.8.1.norm.weight', 'model.diffusion_model.output_blocks.8.1.norm.bias', 'model.diffusion_model.output_blocks.8.1.proj_in.weight', 'model.diffusion_model.output_blocks.8.1.proj_in.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_block
0: s.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output
0: _blocks.8.1.proj_out.weight', 'model.diffusion_model.output_blocks.8.1.proj_out.bias', 'model.diffusion_model.output_blocks.8.2.conv.weight', 'model.diffusion_model.output_blocks.8.2.conv.bias', 'model.diffusion_model.output_blocks.9.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.9.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.9.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.9.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.9.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.9.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.9.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.9.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.9.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.9.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.9.0.skip_connection.weight', 'model.diffusion_model.output_blocks.9.0.skip_connection.bias', 'model.diffusion_model.output_blocks.9.1.norm.weight', 'model.diffusion_model.outpu
0: t_blocks.9.1.norm.bias', 'model.diffusion_model.output_blocks.9.1.proj_in.weight', 'model.diffusion_model.output_blocks.9.1.proj_in.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0
0: .attn2.to_k.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.9.1.proj_out.weight', 'model.diffusion_model.output_blocks.9.1.proj_out.bias', 'model.diffusion_model.output_blocks.10.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.10.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.10.0.in_layers.1.w
0: eight', 'model.diffusion_model.output_blocks.10.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.10.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.10.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.10.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.10.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.10.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.10.0.skip_connection.weight', 'model.diffusion_model.output_blocks.10.0.skip_connection.bias', 'model.diffusion_model.output_blocks.10.1.norm.weight', 'model.diffusion_model.output_blocks.10.1.norm.bias', 'model.diffusion_model.output_blocks.10.1.proj_in.weight', 'model.diffusion_model.output_blocks.10.1.proj_in.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.10.1.transformer
0: _blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.we
0: ight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.10.1.proj_out.weight', 'model.diffusion_model.output_blocks.10.1.proj_out.bias', 'model.diffusion_model.output_blocks.11.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.11.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.11.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.11.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.11.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.11.0.out_layers.0.bias', 'model.diffusio
0: n_model.output_blocks.11.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.11.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.11.0.skip_connection.weight', 'model.diffusion_model.output_blocks.11.0.skip_connection.bias', 'model.diffusion_model.output_blocks.11.1.norm.weight', 'model.diffusion_model.output_blocks.11.1.norm.bias', 'model.diffusion_model.output_blocks.11.1.proj_in.weight', 'model.diffusion_model.output_blocks.11.1.proj_in.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.11.1.transf
0: ormer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm3.weight', 'model.diffusion_mode
0: l.output_blocks.11.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.11.1.proj_out.weight', 'model.diffusion_model.output_blocks.11.1.proj_out.bias', 'model.diffusion_model.out.0.weight', 'model.diffusion_model.out.0.bias', 'model.diffusion_model.out.1.weight', 'model.diffusion_model.out.1.bias']
0: [NeMo I 2024-05-03 19:53:55 ddpm:305] Unexpected Keys: ['model_ema.decay', 'model_ema.num_updates']
0: Global ID: 0, local ID: 0, world size: 4
0: Rank 0 before barrier
1: Global ID: 1, local ID: 1, world size: 4
1: Rank 1 before barrier
2: Global ID: 2, local ID: 2, world size: 4
2: Rank 2 before barrier
3: Global ID: 3, local ID: 3, world size: 4
3: Rank 3 before barrier
0: :::MLLOG {"namespace": "", "time_ms": 1714733637634, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 127, "samples_count": 1024000}}
0: Assigned 7500 prompts for this worker.
0: :::MLLOG {"namespace": "", "time_ms": 1714735901729, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 184, "samples_count": 1024000}}
1: Assigned 7500 prompts for this worker.
3: Assigned 7500 prompts for this worker.
2: Assigned 7500 prompts for this worker.
0: Calculating FID activations:   0%|          | 0/235 [00:00<?, ?it/s]Calculating FID activations:   0%|          | 1/235 [00:01<03:56,  1.01s/it]Calculating FID activations:   2%|▏         | 5/235 [00:01<00:41,  5.52it/s]Calculating FID activations:   4%|▍         | 9/235 [00:01<00:22,  9.97it/s]Calculating FID activations:   6%|▌         | 13/235 [00:01<00:15, 14.14it/s]Calculating FID activations:   7%|▋         | 17/235 [00:01<00:12, 16.96it/s]Calculating FID activations:   9%|▉         | 21/235 [00:01<00:11, 19.08it/s]Calculating FID activations:  11%|█         | 25/235 [00:01<00:10, 20.68it/s]Calculating FID activations:  12%|█▏        | 29/235 [00:02<00:09, 21.71it/s]Calculating FID activations:  14%|█▍        | 33/235 [00:02<00:08, 23.65it/s]Calculating FID activations:  16%|█▌        | 37/235 [00:02<00:08, 24.03it/s]Calculating FID activations:  17%|█▋        | 41/235 [00:02<00:07, 24.31it/s]Calculating FID activations:  19%|█▉        | 45/235 [00:02<00:07, 
0: 24.47it/s]Calculating FID activations:  21%|██        | 49/235 [00:02<00:07, 25.51it/s]Calculating FID activations:  23%|██▎       | 53/235 [00:02<00:07, 25.63it/s]Calculating FID activations:  24%|██▍       | 57/235 [00:03<00:07, 25.42it/s]Calculating FID activations:  26%|██▌       | 61/235 [00:03<00:06, 25.30it/s]Calculating FID activations:  28%|██▊       | 65/235 [00:03<00:06, 25.07it/s]Calculating FID activations:  29%|██▉       | 69/235 [00:03<00:06, 24.65it/s]Calculating FID activations:  31%|███       | 73/235 [00:03<00:06, 26.03it/s]Calculating FID activations:  33%|███▎      | 77/235 [00:03<00:06, 25.43it/s]Calculating FID activations:  34%|███▍      | 81/235 [00:04<00:06, 25.01it/s]Calculating FID activations:  36%|███▌      | 85/235 [00:04<00:06, 24.43it/s]Calculating FID activations:  38%|███▊      | 89/235 [00:04<00:05, 26.22it/s]Calculating FID activations:  40%|████      | 94/235 [00:04<00:04, 30.52it/
0: s]Calculating FID activations:  42%|████▏     | 98/235 [00:04<00:04, 32.11it/s]Calculating FID activations:  44%|████▍     | 103/235 [00:04<00:03, 35.42it/s]Calculating FID activations:  46%|████▌     | 108/235 [00:04<00:03, 37.81it/s]Calculating FID activations:  48%|████▊     | 112/235 [00:04<00:03, 38.26it/s]Calculating FID activations:  49%|████▉     | 116/235 [00:05<00:03, 38.05it/s]Calculating FID activations:  51%|█████     | 120/235 [00:05<00:02, 38.51it/s]Calculating FID activations:  53%|█████▎    | 124/235 [00:05<00:02, 37.76it/s]Calculating FID activations:  55%|█████▍    | 129/235 [00:05<00:02, 36.19it/s]Calculating FID activations:  57%|█████▋    | 133/235 [00:05<00:02, 36.95it/s]Calculating FID activations:  58%|█████▊    | 137/235 [00:05<00:02, 37.39it/s]Calculating FID activations:  60%|██████    | 142/235 [00:05<00:02, 39.24it/s]Calculating FID activations:  62%
0: |██████▏   | 146/235 [00:05<00:02, 39.13it/s]Calculating FID activations:  64%|██████▍   | 150/235 [00:05<00:02, 39.17it/s]Calculating FID activations:  66%|██████▌   | 154/235 [00:06<00:02, 38.76it/s]Calculating FID activations:  67%|██████▋   | 158/235 [00:06<00:01, 38.76it/s]Calculating FID activations:  69%|██████▉   | 163/235 [00:06<00:01, 40.51it/s]Calculating FID activations:  71%|███████▏  | 168/235 [00:06<00:01, 41.17it/s]Calculating FID activations:  74%|███████▎  | 173/235 [00:06<00:01, 38.01it/s]Calculating FID activations:  75%|███████▌  | 177/235 [00:06<00:01, 38.44it/s]Calculating FID activations:  77%|███████▋  | 181/235 [00:06<00:01, 38.78it/s]Calculating FID activations:  79%|███████▊  | 185/235 [00:06<00:01, 38.46it/s]Calculating FID activations:  81%|████████  | 190/235 [00:06<00:01, 40.25it/s]Calculating FID activa
0: tions:  83%|████████▎ | 195/235 [00:07<00:00, 40.64it/s]Calculating FID activations:  85%|████████▌ | 200/235 [00:07<00:00, 40.23it/s]Calculating FID activations:  87%|████████▋ | 205/235 [00:07<00:00, 38.06it/s]Calculating FID activations:  89%|████████▉ | 209/235 [00:07<00:00, 38.01it/s]Calculating FID activations:  91%|█████████ | 213/235 [00:07<00:00, 37.94it/s]Calculating FID activations:  92%|█████████▏| 217/235 [00:07<00:00, 38.23it/s]Calculating FID activations:  94%|█████████▍| 222/235 [00:07<00:00, 40.00it/s]Calculating FID activations:  97%|█████████▋| 227/235 [00:07<00:00, 39.51it/s]Calculating FID activations:  99%|█████████▊| 232/235 [00:08<00:00, 41.51it/s]Calculating FID activations: 100%|██████████| 235/235 [00:08<00:00, 27.63it/s]
0: Computed feature activations of size torch.Size([7500, 2048])
0: :::MLLOG {"namespace": "", "time_ms": 1714735935624, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 159.04568417372485, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 228, "samples_count": 1024000, "metric": "FID"}}
0: :::MLLOG {"namespace": "", "time_ms": 1714736041559, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.10528134554624557, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 258, "samples_count": 1024000, "metric": "CLIP"}}
0: Using 16bit Automatic Mixed Precision (AMP)
0: GPU available: True (cuda), used: True
0: TPU available: False, using: 0 TPU cores
0: IPU available: False, using: 0 IPUs
0: HPU available: False, using: 0 HPUs
0: [NeMo W 2024-05-03 20:34:01 utils:296] Loading from .ckpt checkpoint for inference is experimental! It doesn't support models with model parallelism!
3: [rank3]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': False, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in
0: _channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filter
0: ed-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [rank0]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo I 2024-05-03 20:34:03 megatron_init:265] Rank 0 has data parallel group : [0, 1, 2, 3]
1: [rank1]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo I 2024-05-03 20:34:03 megatron_init:271] Rank 0 has combined group of data parallel and context parallel : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:276] All data parallel group ranks with context parallel combined: [[0, 1, 2, 3]]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:279] Ranks 0 has data parallel rank: 0
0: [NeMo I 2024-05-03 20:34:03 megatron_init:287] Rank 0 has context parallel group: [0]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:290] All context parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:291] Ranks 0 has context parallel rank: 0
0: [NeMo I 2024-05-03 20:34:03 megatron_init:298] Rank 0 has model parallel group: [0]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:299] All model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:308] Rank 0 has tensor model parallel group: [0]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:312] All tensor model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:313] Rank 0 has tensor model parallel rank: 0
0: [NeMo I 2024-05-03 20:34:03 megatron_init:333] Rank 0 has pipeline model parallel group: [0]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:345] Rank 0 has embedding group: [0]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:351] All pipeline model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:352] Rank 0 has pipeline model parallel rank 0
0: [NeMo I 2024-05-03 20:34:03 megatron_init:353] All embedding group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 20:34:03 megatron_init:354] Rank 0 has embedding rank: 0
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 20:34:03 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': False, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in
0: _channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filter
0: ed-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [NeMo I 2024-05-03 20:34:03 ddpm:130] LatentDiffusion: Running in v-prediction mode
0: [NeMo I 2024-05-03 20:34:03 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 20:34:03 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 20:34:03 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 20:34:03 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
2: [rank2]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo I 2024-05-03 20:34:03 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 20:34:03 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 20:34:04 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 20:34:05 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 20:34:06 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 20:34:06 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 20:34:06 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 20:34:06 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 20:34:06 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 20:34:06 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 20:34:06 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 20:34:06 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 20:34:07 utils:92] DiffusionWrapper has 865.91 M params.
0: [NeMo I 2024-05-03 20:34:07 ddpm:168] Use system random generator since CUDA graph enabled
3: Computed feature activations of size torch.Size([7500, 2048])
3: making attention of type 'vanilla' with 512 in_channels
3: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
3: making attention of type 'vanilla' with 512 in_channels
3: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
3: Loaded ViT-H-14 model config.
0: making attention of type 'vanilla' with 512 in_channels
0: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
0: making attention of type 'vanilla' with 512 in_channels
0: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
0: Loaded ViT-H-14 model config.
1: Computed feature activations of size torch.Size([7500, 2048])
1: making attention of type 'vanilla' with 512 in_channels
1: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
1: making attention of type 'vanilla' with 512 in_channels
1: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
1: Loaded ViT-H-14 model config.
2: Computed feature activations of size torch.Size([7500, 2048])
2: making attention of type 'vanilla' with 512 in_channels
2: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
2: making attention of type 'vanilla' with 512 in_channels
2: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
2: Loaded ViT-H-14 model config.
3: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
0: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
1: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
2: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
0: [NeMo I 2024-05-03 20:34:16 ddpm:260] Loading /checkpoints/sd/512-base-ema.ckpt
0: [NeMo I 2024-05-03 20:34:16 ddpm:261] It has 1242 entries
0: [NeMo I 2024-05-03 20:34:16 ddpm:262] Existing model has 1240 entries
0: [NeMo I 2024-05-03 20:34:16 ddpm:296] Deleted 686 keys from `model.diffusion_model` state_dict.
0: [NeMo I 2024-05-03 20:34:16 ddpm:301] Restored from /checkpoints/sd/512-base-ema.ckpt with 686 missing and 2 unexpected keys
0: [NeMo I 2024-05-03 20:34:16 ddpm:303] Missing Keys: ['model.diffusion_model.time_embed.0.weight', 'model.diffusion_model.time_embed.0.bias', 'model.diffusion_model.time_embed.2.weight', 'model.diffusion_model.time_embed.2.bias', 'model.diffusion_model.input_blocks.0.0.weight', 'model.diffusion_model.input_blocks.0.0.bias', 'model.diffusion_model.input_blocks.1.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.1.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.1.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.1.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.1.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.1.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.1.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.1.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.1.1.norm.weight', 'model.diffusion_model.input_blocks.1.1
0: .norm.bias', 'model.diffusion_model.input_blocks.1.1.proj_in.weight', 'model.diffusion_model.input_blocks.1.1.proj_in.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight', 'mod
0: el.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.1.1.proj_out.weight', 'model.diffusion_model.input_blocks.1.1.proj_out.bias', 'model.diffusion_model.input_blocks.2.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.2.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.2.0.in_layers.1.weight', 'model.diffusion_model.input_block
0: s.2.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.2.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.2.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.2.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.2.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.2.1.norm.weight', 'model.diffusion_model.input_blocks.2.1.norm.bias', 'model.diffusion_model.input_blocks.2.1.proj_in.weight', 'model.diffusion_model.input_blocks.2.1.proj_in.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.bias', 'mod
0: el.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.bi
0: as', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.2.1.proj_out.weight', 'model.diffusion_model.input_blocks.2.1.proj_out.bias', 'model.diffusion_model.input_blocks.3.0.op.weight', 'model.diffusion_model.input_blocks.3.0.op.bias', 'model.diffusion_model.input_blocks.4.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.4.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.4.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.4.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.4.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.4.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.4.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.4.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.4.0.skip_co
0: nnection.weight', 'model.diffusion_model.input_blocks.4.0.skip_connection.bias', 'model.diffusion_model.input_blocks.4.1.norm.weight', 'model.diffusion_model.input_blocks.4.1.norm.bias', 'model.diffusion_model.input_blocks.4.1.proj_in.weight', 'model.diffusion_model.input_blocks.4.1.proj_in.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2
0: .bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.4.1.proj_out.weight', 'model.diffusion_model.input_blocks.4.1.proj_out.bias', 'model.diffusion_model.input_blocks.5.0.i
0: n_layers.0.weight', 'model.diffusion_model.input_blocks.5.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.5.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.5.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.5.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.5.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.5.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.5.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.5.1.norm.weight', 'model.diffusion_model.input_blocks.5.1.norm.bias', 'model.diffusion_model.input_blocks.5.1.proj_in.weight', 'model.diffusion_model.input_blocks.5.1.proj_in.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_v.weight'
0: , 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.5.1.trans
0: former_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.5.1.proj_out.weight', 'model.diffusion_model.input_blocks.5.1.proj_out.bias', 'model.diffusion_model.input_blocks.6.0.op.weight', 'model.diffusion_model.input_blocks.6.0.op.bias', 'model.diffusion_model.input_blocks.7.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.7.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.7.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.7.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.7.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.7.0.out_layers.0.bi
0: as', 'model.diffusion_model.input_blocks.7.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.7.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.7.0.skip_connection.weight', 'model.diffusion_model.input_blocks.7.0.skip_connection.bias', 'model.diffusion_model.input_blocks.7.1.norm.weight', 'model.diffusion_model.input_blocks.7.1.norm.bias', 'model.diffusion_model.input_blocks.7.1.proj_in.weight', 'model.diffusion_model.input_blocks.7.1.proj_in.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.7.1.transformer_bloc
0: ks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blo
0: cks.0.norm3.bias', 'model.diffusion_model.input_blocks.7.1.proj_out.weight', 'model.diffusion_model.input_blocks.7.1.proj_out.bias', 'model.diffusion_model.input_blocks.8.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.8.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.8.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.8.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.8.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.8.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.8.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.8.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.8.1.norm.weight', 'model.diffusion_model.input_blocks.8.1.norm.bias', 'model.diffusion_model.input_blocks.8.1.proj_in.weight', 'model.diffusion_model.input_blocks.8.1.proj_in.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.
0: to_q.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_b
0: locks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.8.1.proj_out.weight', 'model.diffusion_model.input_blocks.8.1.proj_out.bias', 'model.diffusion_model.input_blocks.9.0.op.weight', 'model.diffusion_model.input_blocks.9.0.op.bias', 'model.diffusion_model.input_blocks.10.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.10.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.10.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.10.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.10.0.emb_layers.1.weight'
0: , 'model.diffusion_model.input_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.10.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.10.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.10.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.10.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.11.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.11.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.11.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.11.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.11.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.11.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.11.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.11.0.out_layers.2.bias', 'model.diffusion_model.middle_block.0.in_layers.0.weight', 'model.diffusion_model.middle_block.0.
0: in_layers.0.bias', 'model.diffusion_model.middle_block.0.in_layers.1.weight', 'model.diffusion_model.middle_block.0.in_layers.1.bias', 'model.diffusion_model.middle_block.0.emb_layers.1.weight', 'model.diffusion_model.middle_block.0.emb_layers.1.bias', 'model.diffusion_model.middle_block.0.out_layers.0.weight', 'model.diffusion_model.middle_block.0.out_layers.0.bias', 'model.diffusion_model.middle_block.0.out_layers.2.weight', 'model.diffusion_model.middle_block.0.out_layers.2.bias', 'model.diffusion_model.middle_block.1.norm.weight', 'model.diffusion_model.middle_block.1.norm.bias', 'model.diffusion_model.middle_block.1.proj_in.weight', 'model.diffusion_model.middle_block.1.proj_in.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.weight', 'mode
0: l.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm2.weight', 'model.diffus
0: ion_model.middle_block.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.middle_block.1.proj_out.weight', 'model.diffusion_model.middle_block.1.proj_out.bias', 'model.diffusion_model.middle_block.2.in_layers.0.weight', 'model.diffusion_model.middle_block.2.in_layers.0.bias', 'model.diffusion_model.middle_block.2.in_layers.1.weight', 'model.diffusion_model.middle_block.2.in_layers.1.bias', 'model.diffusion_model.middle_block.2.emb_layers.1.weight', 'model.diffusion_model.middle_block.2.emb_layers.1.bias', 'model.diffusion_model.middle_block.2.out_layers.0.weight', 'model.diffusion_model.middle_block.2.out_layers.0.bias', 'model.diffusion_model.middle_block.2.out_layers.2.weight', 'model.diffusion_model.middle_block.2.out_layers.2.bias', 'model.diffusion_model.output_blocks.0.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.0.0.in_layers.0.bias', '
0: model.diffusion_model.output_blocks.0.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.0.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.0.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.0.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.0.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.0.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.0.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.0.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.0.0.skip_connection.weight', 'model.diffusion_model.output_blocks.0.0.skip_connection.bias', 'model.diffusion_model.output_blocks.1.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.1.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.1.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.1.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model.output_blo
0: cks.1.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.1.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.1.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.1.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.1.0.skip_connection.weight', 'model.diffusion_model.output_blocks.1.0.skip_connection.bias', 'model.diffusion_model.output_blocks.2.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.2.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.2.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.2.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.2.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.2.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.2.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.2.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.2.0.skip_connection.weight
0: ', 'model.diffusion_model.output_blocks.2.0.skip_connection.bias', 'model.diffusion_model.output_blocks.2.1.conv.weight', 'model.diffusion_model.output_blocks.2.1.conv.bias', 'model.diffusion_model.output_blocks.3.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.3.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.3.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.3.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.3.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.3.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.3.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.3.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.3.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.3.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.3.0.skip_connection.weight', 'model.diffusion_model.output_blocks.3.0.skip_connection.bias', 'model.diffusion_model.output_blocks.3.1.norm.weight', 'model.diffusion_model.output_blocks.3.1.norm.bi
0: as', 'model.diffusion_model.output_blocks.3.1.proj_in.weight', 'model.diffusion_model.output_blocks.3.1.proj_in.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight',
0:  'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.3.1.proj_out.weight', 'model.diffusion_model.output_blocks.3.1.proj_out.bias', 'model.diffusion_model.output_blocks.4.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.4.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.4.0.in_layers.1.weight', 'model.diffusio
0: n_model.output_blocks.4.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.4.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.4.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.4.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.4.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.4.0.skip_connection.weight', 'model.diffusion_model.output_blocks.4.0.skip_connection.bias', 'model.diffusion_model.output_blocks.4.1.norm.weight', 'model.diffusion_model.output_blocks.4.1.norm.bias', 'model.diffusion_model.output_blocks.4.1.proj_in.weight', 'model.diffusion_model.output_blocks.4.1.proj_in.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.di
0: ffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.4.1.tra
0: nsformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.4.1.proj_out.weight', 'model.diffusion_model.output_blocks.4.1.proj_out.bias', 'model.diffusion_model.output_blocks.5.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.5.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.5.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.5.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.5.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.5.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.5.0.out_layers.2.weight', 'model.diffusion_m
0: odel.output_blocks.5.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.5.0.skip_connection.weight', 'model.diffusion_model.output_blocks.5.0.skip_connection.bias', 'model.diffusion_model.output_blocks.5.1.norm.weight', 'model.diffusion_model.output_blocks.5.1.norm.bias', 'model.diffusion_model.output_blocks.5.1.proj_in.weight', 'model.diffusion_model.output_blocks.5.1.proj_in.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.5.1.tran
0: sformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.5.
0: 1.proj_out.weight', 'model.diffusion_model.output_blocks.5.1.proj_out.bias', 'model.diffusion_model.output_blocks.5.2.conv.weight', 'model.diffusion_model.output_blocks.5.2.conv.bias', 'model.diffusion_model.output_blocks.6.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.6.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.6.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.6.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.6.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.6.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.6.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.6.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.6.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.6.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.6.0.skip_connection.weight', 'model.diffusion_model.output_blocks.6.0.skip_connection.bias', 'model.diffusion_model.output_blocks.6.1.norm.weight', 'model.diffusion_model.output_blocks.6
0: .1.norm.bias', 'model.diffusion_model.output_blocks.6.1.proj_in.weight', 'model.diffusion_model.output_blocks.6.1.proj_in.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_
0: k.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.6.1.proj_out.weight', 'model.diffusion_model.output_blocks.6.1.proj_out.bias', 'model.diffusion_model.output_blocks.7.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.7.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.7.0.in_layers.1.weight', 'mode
0: l.diffusion_model.output_blocks.7.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.7.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.7.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.7.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.7.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.7.0.skip_connection.weight', 'model.diffusion_model.output_blocks.7.0.skip_connection.bias', 'model.diffusion_model.output_blocks.7.1.norm.weight', 'model.diffusion_model.output_blocks.7.1.norm.bias', 'model.diffusion_model.output_blocks.7.1.proj_in.weight', 'model.diffusion_model.output_blocks.7.1.proj_in.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_v.weight',
0:  'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_bloc
0: ks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.7.1.proj_out.weight', 'model.diffusion_model.output_blocks.7.1.proj_out.bias', 'model.diffusion_model.output_blocks.8.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.8.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.8.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.8.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.8.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.8.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.8.0.out_layers.2.weight', 'model.d
0: iffusion_model.output_blocks.8.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.8.0.skip_connection.weight', 'model.diffusion_model.output_blocks.8.0.skip_connection.bias', 'model.diffusion_model.output_blocks.8.1.norm.weight', 'model.diffusion_model.output_blocks.8.1.norm.bias', 'model.diffusion_model.output_blocks.8.1.proj_in.weight', 'model.diffusion_model.output_blocks.8.1.proj_in.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_block
0: s.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output
0: _blocks.8.1.proj_out.weight', 'model.diffusion_model.output_blocks.8.1.proj_out.bias', 'model.diffusion_model.output_blocks.8.2.conv.weight', 'model.diffusion_model.output_blocks.8.2.conv.bias', 'model.diffusion_model.output_blocks.9.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.9.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.9.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.9.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.9.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.9.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.9.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.9.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.9.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.9.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.9.0.skip_connection.weight', 'model.diffusion_model.output_blocks.9.0.skip_connection.bias', 'model.diffusion_model.output_blocks.9.1.norm.weight', 'model.diffusion_model.outpu
0: t_blocks.9.1.norm.bias', 'model.diffusion_model.output_blocks.9.1.proj_in.weight', 'model.diffusion_model.output_blocks.9.1.proj_in.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0
0: .attn2.to_k.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.9.1.proj_out.weight', 'model.diffusion_model.output_blocks.9.1.proj_out.bias', 'model.diffusion_model.output_blocks.10.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.10.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.10.0.in_layers.1.w
0: eight', 'model.diffusion_model.output_blocks.10.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.10.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.10.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.10.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.10.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.10.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.10.0.skip_connection.weight', 'model.diffusion_model.output_blocks.10.0.skip_connection.bias', 'model.diffusion_model.output_blocks.10.1.norm.weight', 'model.diffusion_model.output_blocks.10.1.norm.bias', 'model.diffusion_model.output_blocks.10.1.proj_in.weight', 'model.diffusion_model.output_blocks.10.1.proj_in.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.10.1.transformer
0: _blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.we
0: ight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.10.1.proj_out.weight', 'model.diffusion_model.output_blocks.10.1.proj_out.bias', 'model.diffusion_model.output_blocks.11.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.11.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.11.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.11.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.11.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.11.0.out_layers.0.bias', 'model.diffusio
0: n_model.output_blocks.11.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.11.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.11.0.skip_connection.weight', 'model.diffusion_model.output_blocks.11.0.skip_connection.bias', 'model.diffusion_model.output_blocks.11.1.norm.weight', 'model.diffusion_model.output_blocks.11.1.norm.bias', 'model.diffusion_model.output_blocks.11.1.proj_in.weight', 'model.diffusion_model.output_blocks.11.1.proj_in.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.11.1.transf
0: ormer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm3.weight', 'model.diffusion_mode
0: l.output_blocks.11.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.11.1.proj_out.weight', 'model.diffusion_model.output_blocks.11.1.proj_out.bias', 'model.diffusion_model.out.0.weight', 'model.diffusion_model.out.0.bias', 'model.diffusion_model.out.1.weight', 'model.diffusion_model.out.1.bias']
0: [NeMo I 2024-05-03 20:34:16 ddpm:305] Unexpected Keys: ['model_ema.decay', 'model_ema.num_updates']
0: Global ID: 0, local ID: 0, world size: 4
0: Rank 0 before barrier
1: Global ID: 1, local ID: 1, world size: 4
1: Rank 1 before barrier
2: Global ID: 2, local ID: 2, world size: 4
2: Rank 2 before barrier
3: Global ID: 3, local ID: 3, world size: 4
3: Rank 3 before barrier
0: :::MLLOG {"namespace": "", "time_ms": 1714736058770, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 127, "samples_count": 1536000}}
0: Assigned 7500 prompts for this worker.
0: :::MLLOG {"namespace": "", "time_ms": 1714738321378, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 184, "samples_count": 1536000}}
1: Assigned 7500 prompts for this worker.
3: Assigned 7500 prompts for this worker.
2: Assigned 7500 prompts for this worker.
0: Calculating FID activations:   0%|          | 0/235 [00:00<?, ?it/s]Calculating FID activations:   0%|          | 1/235 [00:01<04:05,  1.05s/it]Calculating FID activations:   2%|▏         | 5/235 [00:01<00:43,  5.32it/s]Calculating FID activations:   4%|▍         | 9/235 [00:01<00:23,  9.46it/s]Calculating FID activations:   6%|▌         | 13/235 [00:01<00:16, 13.12it/s]Calculating FID activations:   7%|▋         | 17/235 [00:01<00:13, 15.99it/s]Calculating FID activations:   9%|▉         | 21/235 [00:01<00:11, 18.44it/s]Calculating FID activations:  11%|█         | 25/235 [00:01<00:10, 20.28it/s]Calculating FID activations:  12%|█▏        | 29/235 [00:02<00:09, 21.49it/s]Calculating FID activations:  14%|█▍        | 33/235 [00:02<00:09, 22.42it/s]Calculating FID activations:  16%|█▌        | 37/235 [00:02<00:08, 23.29it/s]Calculating FID activations:  17%|█▋        | 41/235 [00:02<00:08, 23.72it/s]Calculating FID activations:  19%|█▉        | 45/235 [00:02<00:07, 
0: 24.40it/s]Calculating FID activations:  21%|██        | 49/235 [00:02<00:07, 24.79it/s]Calculating FID activations:  23%|██▎       | 53/235 [00:03<00:07, 25.29it/s]Calculating FID activations:  24%|██▍       | 57/235 [00:03<00:06, 25.73it/s]Calculating FID activations:  26%|██▌       | 61/235 [00:03<00:06, 25.68it/s]Calculating FID activations:  28%|██▊       | 65/235 [00:03<00:06, 25.65it/s]Calculating FID activations:  29%|██▉       | 69/235 [00:03<00:06, 25.80it/s]Calculating FID activations:  31%|███       | 73/235 [00:03<00:06, 25.85it/s]Calculating FID activations:  33%|███▎      | 77/235 [00:04<00:06, 25.56it/s]Calculating FID activations:  34%|███▍      | 81/235 [00:04<00:06, 25.35it/s]Calculating FID activations:  36%|███▌      | 85/235 [00:04<00:05, 25.08it/s]Calculating FID activations:  38%|███▊      | 89/235 [00:04<00:05, 25.43it/s]Calculating FID activations:  40%|███▉      | 93/235 [00:04<00:05, 28.09it/
0: s]Calculating FID activations:  42%|████▏     | 98/235 [00:04<00:04, 32.15it/s]Calculating FID activations:  44%|████▍     | 103/235 [00:04<00:03, 35.59it/s]Calculating FID activations:  46%|████▌     | 108/235 [00:04<00:03, 38.03it/s]Calculating FID activations:  48%|████▊     | 113/235 [00:05<00:03, 35.66it/s]Calculating FID activations:  50%|█████     | 118/235 [00:05<00:03, 38.08it/s]Calculating FID activations:  52%|█████▏    | 122/235 [00:05<00:02, 38.38it/s]Calculating FID activations:  54%|█████▎    | 126/235 [00:05<00:02, 38.52it/s]Calculating FID activations:  56%|█████▌    | 131/235 [00:05<00:02, 40.58it/s]Calculating FID activations:  58%|█████▊    | 136/235 [00:05<00:02, 41.37it/s]Calculating FID activations:  60%|██████    | 141/235 [00:05<00:02, 38.87it/s]Calculating FID activations:  62%|██████▏   | 146/235 [00:05<00:02, 40.91it/s]Calculating FID activations: 
0:  64%|██████▍   | 151/235 [00:06<00:02, 39.87it/s]Calculating FID activations:  67%|██████▋   | 157/235 [00:06<00:01, 40.60it/s]Calculating FID activations:  69%|██████▉   | 162/235 [00:06<00:01, 41.33it/s]Calculating FID activations:  71%|███████   | 167/235 [00:06<00:01, 42.22it/s]Calculating FID activations:  73%|███████▎  | 172/235 [00:06<00:01, 42.39it/s]Calculating FID activations:  75%|███████▌  | 177/235 [00:06<00:01, 40.43it/s]Calculating FID activations:  77%|███████▋  | 182/235 [00:06<00:01, 40.25it/s]Calculating FID activations:  80%|████████  | 188/235 [00:06<00:01, 44.35it/s]Calculating FID activations:  82%|████████▏ | 193/235 [00:07<00:01, 39.31it/s]Calculating FID activations:  84%|████████▍ | 198/235 [00:07<00:00, 41.85it/s]Calculating FID activations:  86%|████████▋ | 203/235 [00:07<00:00, 42.44it/s]Calculatin
0: g FID activations:  89%|████████▊ | 208/235 [00:07<00:00, 42.40it/s]Calculating FID activations:  91%|█████████ | 213/235 [00:07<00:00, 38.57it/s]Calculating FID activations:  93%|█████████▎| 218/235 [00:07<00:00, 40.54it/s]Calculating FID activations:  95%|█████████▍| 223/235 [00:07<00:00, 40.55it/s]Calculating FID activations:  97%|█████████▋| 228/235 [00:07<00:00, 42.91it/s]Calculating FID activations:  99%|█████████▉| 233/235 [00:08<00:00, 40.38it/s]Calculating FID activations: 100%|██████████| 235/235 [00:08<00:00, 27.60it/s]
0: Computed feature activations of size torch.Size([7500, 2048])
0: :::MLLOG {"namespace": "", "time_ms": 1714738349412, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 106.78861994857442, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 228, "samples_count": 1536000, "metric": "FID"}}
0: :::MLLOG {"namespace": "", "time_ms": 1714738455516, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.15233075618743896, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 258, "samples_count": 1536000, "metric": "CLIP"}}
0: Using 16bit Automatic Mixed Precision (AMP)
0: GPU available: True (cuda), used: True
0: TPU available: False, using: 0 TPU cores
0: IPU available: False, using: 0 IPUs
0: HPU available: False, using: 0 HPUs
0: [NeMo W 2024-05-03 21:14:15 utils:296] Loading from .ckpt checkpoint for inference is experimental! It doesn't support models with model parallelism!
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': False, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in
0: _channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filter
0: ed-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [rank0]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo I 2024-05-03 21:14:17 megatron_init:265] Rank 0 has data parallel group : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:271] Rank 0 has combined group of data parallel and context parallel : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:276] All data parallel group ranks with context parallel combined: [[0, 1, 2, 3]]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:279] Ranks 0 has data parallel rank: 0
0: [NeMo I 2024-05-03 21:14:17 megatron_init:287] Rank 0 has context parallel group: [0]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:290] All context parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:291] Ranks 0 has context parallel rank: 0
0: [NeMo I 2024-05-03 21:14:17 megatron_init:298] Rank 0 has model parallel group: [0]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:299] All model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:308] Rank 0 has tensor model parallel group: [0]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:312] All tensor model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:313] Rank 0 has tensor model parallel rank: 0
0: [NeMo I 2024-05-03 21:14:17 megatron_init:333] Rank 0 has pipeline model parallel group: [0]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:345] Rank 0 has embedding group: [0]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:351] All pipeline model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:352] Rank 0 has pipeline model parallel rank 0
0: [NeMo I 2024-05-03 21:14:17 megatron_init:353] All embedding group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 21:14:17 megatron_init:354] Rank 0 has embedding rank: 0
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:14:17 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': False, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in
0: _channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filter
0: ed-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [NeMo I 2024-05-03 21:14:17 ddpm:130] LatentDiffusion: Running in v-prediction mode
0: [NeMo I 2024-05-03 21:14:17 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 21:14:17 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 21:14:17 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
2: [rank2]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
1: [rank1]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
3: [rank3]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo I 2024-05-03 21:14:17 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 21:14:17 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:14:17 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:14:18 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:14:19 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:14:19 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:14:20 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:14:20 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 21:14:20 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 21:14:20 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 21:14:20 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 21:14:20 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 21:14:20 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 21:14:21 utils:92] DiffusionWrapper has 865.91 M params.
0: [NeMo I 2024-05-03 21:14:21 ddpm:168] Use system random generator since CUDA graph enabled
0: making attention of type 'vanilla' with 512 in_channels
0: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
0: making attention of type 'vanilla' with 512 in_channels
0: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
0: Loaded ViT-H-14 model config.
2: Computed feature activations of size torch.Size([7500, 2048])
2: making attention of type 'vanilla' with 512 in_channels
2: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
2: making attention of type 'vanilla' with 512 in_channels
2: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
2: Loaded ViT-H-14 model config.
3: Computed feature activations of size torch.Size([7500, 2048])
3: making attention of type 'vanilla' with 512 in_channels
3: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
3: making attention of type 'vanilla' with 512 in_channels
3: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
3: Loaded ViT-H-14 model config.
1: Computed feature activations of size torch.Size([7500, 2048])
1: making attention of type 'vanilla' with 512 in_channels
1: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
1: making attention of type 'vanilla' with 512 in_channels
1: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
1: Loaded ViT-H-14 model config.
0: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
2: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
3: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
1: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
0: [NeMo I 2024-05-03 21:14:29 ddpm:260] Loading /checkpoints/sd/512-base-ema.ckpt
0: [NeMo I 2024-05-03 21:14:29 ddpm:261] It has 1242 entries
0: [NeMo I 2024-05-03 21:14:29 ddpm:262] Existing model has 1240 entries
0: [NeMo I 2024-05-03 21:14:29 ddpm:296] Deleted 686 keys from `model.diffusion_model` state_dict.
0: [NeMo I 2024-05-03 21:14:30 ddpm:301] Restored from /checkpoints/sd/512-base-ema.ckpt with 686 missing and 2 unexpected keys
0: [NeMo I 2024-05-03 21:14:30 ddpm:303] Missing Keys: ['model.diffusion_model.time_embed.0.weight', 'model.diffusion_model.time_embed.0.bias', 'model.diffusion_model.time_embed.2.weight', 'model.diffusion_model.time_embed.2.bias', 'model.diffusion_model.input_blocks.0.0.weight', 'model.diffusion_model.input_blocks.0.0.bias', 'model.diffusion_model.input_blocks.1.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.1.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.1.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.1.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.1.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.1.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.1.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.1.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.1.1.norm.weight', 'model.diffusion_model.input_blocks.1.1
0: .norm.bias', 'model.diffusion_model.input_blocks.1.1.proj_in.weight', 'model.diffusion_model.input_blocks.1.1.proj_in.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight', 'mod
0: el.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.1.1.proj_out.weight', 'model.diffusion_model.input_blocks.1.1.proj_out.bias', 'model.diffusion_model.input_blocks.2.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.2.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.2.0.in_layers.1.weight', 'model.diffusion_model.input_block
0: s.2.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.2.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.2.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.2.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.2.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.2.1.norm.weight', 'model.diffusion_model.input_blocks.2.1.norm.bias', 'model.diffusion_model.input_blocks.2.1.proj_in.weight', 'model.diffusion_model.input_blocks.2.1.proj_in.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.bias', 'mod
0: el.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.bi
0: as', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.2.1.proj_out.weight', 'model.diffusion_model.input_blocks.2.1.proj_out.bias', 'model.diffusion_model.input_blocks.3.0.op.weight', 'model.diffusion_model.input_blocks.3.0.op.bias', 'model.diffusion_model.input_blocks.4.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.4.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.4.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.4.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.4.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.4.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.4.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.4.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.4.0.skip_co
0: nnection.weight', 'model.diffusion_model.input_blocks.4.0.skip_connection.bias', 'model.diffusion_model.input_blocks.4.1.norm.weight', 'model.diffusion_model.input_blocks.4.1.norm.bias', 'model.diffusion_model.input_blocks.4.1.proj_in.weight', 'model.diffusion_model.input_blocks.4.1.proj_in.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2
0: .bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.4.1.proj_out.weight', 'model.diffusion_model.input_blocks.4.1.proj_out.bias', 'model.diffusion_model.input_blocks.5.0.i
0: n_layers.0.weight', 'model.diffusion_model.input_blocks.5.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.5.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.5.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.5.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.5.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.5.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.5.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.5.1.norm.weight', 'model.diffusion_model.input_blocks.5.1.norm.bias', 'model.diffusion_model.input_blocks.5.1.proj_in.weight', 'model.diffusion_model.input_blocks.5.1.proj_in.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_v.weight'
0: , 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.5.1.trans
0: former_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.5.1.proj_out.weight', 'model.diffusion_model.input_blocks.5.1.proj_out.bias', 'model.diffusion_model.input_blocks.6.0.op.weight', 'model.diffusion_model.input_blocks.6.0.op.bias', 'model.diffusion_model.input_blocks.7.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.7.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.7.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.7.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.7.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.7.0.out_layers.0.bi
0: as', 'model.diffusion_model.input_blocks.7.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.7.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.7.0.skip_connection.weight', 'model.diffusion_model.input_blocks.7.0.skip_connection.bias', 'model.diffusion_model.input_blocks.7.1.norm.weight', 'model.diffusion_model.input_blocks.7.1.norm.bias', 'model.diffusion_model.input_blocks.7.1.proj_in.weight', 'model.diffusion_model.input_blocks.7.1.proj_in.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.7.1.transformer_bloc
0: ks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blo
0: cks.0.norm3.bias', 'model.diffusion_model.input_blocks.7.1.proj_out.weight', 'model.diffusion_model.input_blocks.7.1.proj_out.bias', 'model.diffusion_model.input_blocks.8.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.8.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.8.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.8.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.8.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.8.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.8.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.8.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.8.1.norm.weight', 'model.diffusion_model.input_blocks.8.1.norm.bias', 'model.diffusion_model.input_blocks.8.1.proj_in.weight', 'model.diffusion_model.input_blocks.8.1.proj_in.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.
0: to_q.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_b
0: locks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.8.1.proj_out.weight', 'model.diffusion_model.input_blocks.8.1.proj_out.bias', 'model.diffusion_model.input_blocks.9.0.op.weight', 'model.diffusion_model.input_blocks.9.0.op.bias', 'model.diffusion_model.input_blocks.10.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.10.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.10.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.10.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.10.0.emb_layers.1.weight'
0: , 'model.diffusion_model.input_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.10.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.10.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.10.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.10.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.11.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.11.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.11.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.11.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.11.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.11.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.11.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.11.0.out_layers.2.bias', 'model.diffusion_model.middle_block.0.in_layers.0.weight', 'model.diffusion_model.middle_block.0.
0: in_layers.0.bias', 'model.diffusion_model.middle_block.0.in_layers.1.weight', 'model.diffusion_model.middle_block.0.in_layers.1.bias', 'model.diffusion_model.middle_block.0.emb_layers.1.weight', 'model.diffusion_model.middle_block.0.emb_layers.1.bias', 'model.diffusion_model.middle_block.0.out_layers.0.weight', 'model.diffusion_model.middle_block.0.out_layers.0.bias', 'model.diffusion_model.middle_block.0.out_layers.2.weight', 'model.diffusion_model.middle_block.0.out_layers.2.bias', 'model.diffusion_model.middle_block.1.norm.weight', 'model.diffusion_model.middle_block.1.norm.bias', 'model.diffusion_model.middle_block.1.proj_in.weight', 'model.diffusion_model.middle_block.1.proj_in.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.weight', 'mode
0: l.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm2.weight', 'model.diffus
0: ion_model.middle_block.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.middle_block.1.proj_out.weight', 'model.diffusion_model.middle_block.1.proj_out.bias', 'model.diffusion_model.middle_block.2.in_layers.0.weight', 'model.diffusion_model.middle_block.2.in_layers.0.bias', 'model.diffusion_model.middle_block.2.in_layers.1.weight', 'model.diffusion_model.middle_block.2.in_layers.1.bias', 'model.diffusion_model.middle_block.2.emb_layers.1.weight', 'model.diffusion_model.middle_block.2.emb_layers.1.bias', 'model.diffusion_model.middle_block.2.out_layers.0.weight', 'model.diffusion_model.middle_block.2.out_layers.0.bias', 'model.diffusion_model.middle_block.2.out_layers.2.weight', 'model.diffusion_model.middle_block.2.out_layers.2.bias', 'model.diffusion_model.output_blocks.0.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.0.0.in_layers.0.bias', '
0: model.diffusion_model.output_blocks.0.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.0.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.0.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.0.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.0.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.0.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.0.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.0.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.0.0.skip_connection.weight', 'model.diffusion_model.output_blocks.0.0.skip_connection.bias', 'model.diffusion_model.output_blocks.1.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.1.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.1.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.1.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model.output_blo
0: cks.1.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.1.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.1.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.1.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.1.0.skip_connection.weight', 'model.diffusion_model.output_blocks.1.0.skip_connection.bias', 'model.diffusion_model.output_blocks.2.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.2.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.2.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.2.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.2.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.2.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.2.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.2.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.2.0.skip_connection.weight
0: ', 'model.diffusion_model.output_blocks.2.0.skip_connection.bias', 'model.diffusion_model.output_blocks.2.1.conv.weight', 'model.diffusion_model.output_blocks.2.1.conv.bias', 'model.diffusion_model.output_blocks.3.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.3.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.3.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.3.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.3.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.3.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.3.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.3.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.3.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.3.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.3.0.skip_connection.weight', 'model.diffusion_model.output_blocks.3.0.skip_connection.bias', 'model.diffusion_model.output_blocks.3.1.norm.weight', 'model.diffusion_model.output_blocks.3.1.norm.bi
0: as', 'model.diffusion_model.output_blocks.3.1.proj_in.weight', 'model.diffusion_model.output_blocks.3.1.proj_in.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight',
0:  'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.3.1.proj_out.weight', 'model.diffusion_model.output_blocks.3.1.proj_out.bias', 'model.diffusion_model.output_blocks.4.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.4.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.4.0.in_layers.1.weight', 'model.diffusio
0: n_model.output_blocks.4.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.4.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.4.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.4.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.4.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.4.0.skip_connection.weight', 'model.diffusion_model.output_blocks.4.0.skip_connection.bias', 'model.diffusion_model.output_blocks.4.1.norm.weight', 'model.diffusion_model.output_blocks.4.1.norm.bias', 'model.diffusion_model.output_blocks.4.1.proj_in.weight', 'model.diffusion_model.output_blocks.4.1.proj_in.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.di
0: ffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.4.1.tra
0: nsformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.4.1.proj_out.weight', 'model.diffusion_model.output_blocks.4.1.proj_out.bias', 'model.diffusion_model.output_blocks.5.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.5.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.5.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.5.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.5.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.5.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.5.0.out_layers.2.weight', 'model.diffusion_m
0: odel.output_blocks.5.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.5.0.skip_connection.weight', 'model.diffusion_model.output_blocks.5.0.skip_connection.bias', 'model.diffusion_model.output_blocks.5.1.norm.weight', 'model.diffusion_model.output_blocks.5.1.norm.bias', 'model.diffusion_model.output_blocks.5.1.proj_in.weight', 'model.diffusion_model.output_blocks.5.1.proj_in.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.5.1.tran
0: sformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.5.
0: 1.proj_out.weight', 'model.diffusion_model.output_blocks.5.1.proj_out.bias', 'model.diffusion_model.output_blocks.5.2.conv.weight', 'model.diffusion_model.output_blocks.5.2.conv.bias', 'model.diffusion_model.output_blocks.6.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.6.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.6.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.6.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.6.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.6.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.6.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.6.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.6.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.6.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.6.0.skip_connection.weight', 'model.diffusion_model.output_blocks.6.0.skip_connection.bias', 'model.diffusion_model.output_blocks.6.1.norm.weight', 'model.diffusion_model.output_blocks.6
0: .1.norm.bias', 'model.diffusion_model.output_blocks.6.1.proj_in.weight', 'model.diffusion_model.output_blocks.6.1.proj_in.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_
0: k.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.6.1.proj_out.weight', 'model.diffusion_model.output_blocks.6.1.proj_out.bias', 'model.diffusion_model.output_blocks.7.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.7.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.7.0.in_layers.1.weight', 'mode
0: l.diffusion_model.output_blocks.7.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.7.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.7.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.7.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.7.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.7.0.skip_connection.weight', 'model.diffusion_model.output_blocks.7.0.skip_connection.bias', 'model.diffusion_model.output_blocks.7.1.norm.weight', 'model.diffusion_model.output_blocks.7.1.norm.bias', 'model.diffusion_model.output_blocks.7.1.proj_in.weight', 'model.diffusion_model.output_blocks.7.1.proj_in.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_v.weight',
0:  'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_bloc
0: ks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.7.1.proj_out.weight', 'model.diffusion_model.output_blocks.7.1.proj_out.bias', 'model.diffusion_model.output_blocks.8.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.8.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.8.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.8.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.8.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.8.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.8.0.out_layers.2.weight', 'model.d
0: iffusion_model.output_blocks.8.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.8.0.skip_connection.weight', 'model.diffusion_model.output_blocks.8.0.skip_connection.bias', 'model.diffusion_model.output_blocks.8.1.norm.weight', 'model.diffusion_model.output_blocks.8.1.norm.bias', 'model.diffusion_model.output_blocks.8.1.proj_in.weight', 'model.diffusion_model.output_blocks.8.1.proj_in.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_block
0: s.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output
0: _blocks.8.1.proj_out.weight', 'model.diffusion_model.output_blocks.8.1.proj_out.bias', 'model.diffusion_model.output_blocks.8.2.conv.weight', 'model.diffusion_model.output_blocks.8.2.conv.bias', 'model.diffusion_model.output_blocks.9.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.9.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.9.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.9.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.9.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.9.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.9.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.9.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.9.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.9.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.9.0.skip_connection.weight', 'model.diffusion_model.output_blocks.9.0.skip_connection.bias', 'model.diffusion_model.output_blocks.9.1.norm.weight', 'model.diffusion_model.outpu
0: t_blocks.9.1.norm.bias', 'model.diffusion_model.output_blocks.9.1.proj_in.weight', 'model.diffusion_model.output_blocks.9.1.proj_in.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0
0: .attn2.to_k.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.9.1.proj_out.weight', 'model.diffusion_model.output_blocks.9.1.proj_out.bias', 'model.diffusion_model.output_blocks.10.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.10.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.10.0.in_layers.1.w
0: eight', 'model.diffusion_model.output_blocks.10.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.10.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.10.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.10.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.10.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.10.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.10.0.skip_connection.weight', 'model.diffusion_model.output_blocks.10.0.skip_connection.bias', 'model.diffusion_model.output_blocks.10.1.norm.weight', 'model.diffusion_model.output_blocks.10.1.norm.bias', 'model.diffusion_model.output_blocks.10.1.proj_in.weight', 'model.diffusion_model.output_blocks.10.1.proj_in.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.10.1.transformer
0: _blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.we
0: ight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.10.1.proj_out.weight', 'model.diffusion_model.output_blocks.10.1.proj_out.bias', 'model.diffusion_model.output_blocks.11.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.11.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.11.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.11.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.11.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.11.0.out_layers.0.bias', 'model.diffusio
0: n_model.output_blocks.11.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.11.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.11.0.skip_connection.weight', 'model.diffusion_model.output_blocks.11.0.skip_connection.bias', 'model.diffusion_model.output_blocks.11.1.norm.weight', 'model.diffusion_model.output_blocks.11.1.norm.bias', 'model.diffusion_model.output_blocks.11.1.proj_in.weight', 'model.diffusion_model.output_blocks.11.1.proj_in.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.11.1.transf
0: ormer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm3.weight', 'model.diffusion_mode
0: l.output_blocks.11.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.11.1.proj_out.weight', 'model.diffusion_model.output_blocks.11.1.proj_out.bias', 'model.diffusion_model.out.0.weight', 'model.diffusion_model.out.0.bias', 'model.diffusion_model.out.1.weight', 'model.diffusion_model.out.1.bias']
0: [NeMo I 2024-05-03 21:14:30 ddpm:305] Unexpected Keys: ['model_ema.decay', 'model_ema.num_updates']
0: Global ID: 0, local ID: 0, world size: 4
0: Rank 0 before barrier
1: Global ID: 1, local ID: 1, world size: 4
1: Rank 1 before barrier
2: Global ID: 2, local ID: 2, world size: 4
2: Rank 2 before barrier
3: Global ID: 3, local ID: 3, world size: 4
3: Rank 3 before barrier
0: :::MLLOG {"namespace": "", "time_ms": 1714738472383, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 127, "samples_count": 2048000}}
0: Assigned 7500 prompts for this worker.
0: :::MLLOG {"namespace": "", "time_ms": 1714740734340, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 184, "samples_count": 2048000}}
1: Assigned 7500 prompts for this worker.
2: Assigned 7500 prompts for this worker.
3: Assigned 7500 prompts for this worker.
0: Calculating FID activations:   0%|          | 0/235 [00:00<?, ?it/s]Calculating FID activations:   0%|          | 1/235 [00:01<04:05,  1.05s/it]Calculating FID activations:   2%|▏         | 5/235 [00:01<00:42,  5.40it/s]Calculating FID activations:   4%|▍         | 9/235 [00:01<00:24,  9.19it/s]Calculating FID activations:   6%|▌         | 13/235 [00:01<00:16, 13.32it/s]Calculating FID activations:   7%|▋         | 17/235 [00:01<00:13, 16.12it/s]Calculating FID activations:   9%|▉         | 21/235 [00:01<00:11, 17.90it/s]Calculating FID activations:  11%|█         | 25/235 [00:01<00:10, 20.06it/s]Calculating FID activations:  12%|█▏        | 29/235 [00:02<00:09, 21.28it/s]Calculating FID activations:  14%|█▍        | 33/235 [00:02<00:08, 22.82it/s]Calculating FID activations:  16%|█▌        | 37/235 [00:02<00:08, 23.73it/s]Calculating FID activations:  17%|█▋        | 41/235 [00:02<00:08, 24.18it/s]Calculating FID activations:  19%|█▉        | 45/235 [00:02<00:07, 
0: 24.41it/s]Calculating FID activations:  21%|██        | 49/235 [00:02<00:07, 24.77it/s]Calculating FID activations:  23%|██▎       | 53/235 [00:03<00:07, 24.69it/s]Calculating FID activations:  24%|██▍       | 57/235 [00:03<00:07, 25.31it/s]Calculating FID activations:  26%|██▌       | 61/235 [00:03<00:06, 26.94it/s]Calculating FID activations:  28%|██▊       | 66/235 [00:03<00:06, 25.84it/s]Calculating FID activations:  30%|██▉       | 70/235 [00:03<00:06, 26.16it/s]Calculating FID activations:  31%|███▏      | 74/235 [00:03<00:06, 25.50it/s]Calculating FID activations:  33%|███▎      | 78/235 [00:04<00:06, 24.93it/s]Calculating FID activations:  35%|███▍      | 82/235 [00:04<00:05, 25.59it/s]Calculating FID activations:  37%|███▋      | 86/235 [00:04<00:05, 26.27it/s]Calculating FID activations:  39%|███▊      | 91/235 [00:04<00:04, 30.36it/s]Calculating FID activations:  40%|████      | 95/235 [00:04<00:04, 29.67i
0: t/s]Calculating FID activations:  42%|████▏     | 99/235 [00:04<00:04, 28.23it/s]Calculating FID activations:  43%|████▎     | 102/235 [00:04<00:05, 24.84it/s]Calculating FID activations:  45%|████▍     | 105/235 [00:05<00:05, 23.39it/s]Calculating FID activations:  46%|████▋     | 109/235 [00:05<00:05, 22.61it/s]Calculating FID activations:  48%|████▊     | 113/235 [00:05<00:05, 21.25it/s]Calculating FID activations:  50%|████▉     | 117/235 [00:05<00:05, 21.21it/s]Calculating FID activations:  51%|█████▏    | 121/235 [00:05<00:05, 20.50it/s]Calculating FID activations:  53%|█████▎    | 125/235 [00:06<00:05, 20.05it/s]Calculating FID activations:  55%|█████▍    | 129/235 [00:06<00:05, 20.48it/s]Calculating FID activations:  57%|█████▋    | 133/235 [00:06<00:04, 21.47it/s]Calculating FID activations:  58%|█████▊    | 137/235 [00:06<00:04, 22.09it/s]Calculating FID activations:  6
0: 0%|██████    | 141/235 [00:06<00:04, 22.69it/s]Calculating FID activations:  62%|██████▏   | 145/235 [00:06<00:03, 23.12it/s]Calculating FID activations:  63%|██████▎   | 149/235 [00:07<00:03, 23.35it/s]Calculating FID activations:  66%|██████▌   | 154/235 [00:07<00:02, 27.79it/s]Calculating FID activations:  67%|██████▋   | 158/235 [00:07<00:02, 30.02it/s]Calculating FID activations:  69%|██████▉   | 163/235 [00:07<00:02, 34.13it/s]Calculating FID activations:  71%|███████   | 167/235 [00:07<00:01, 35.46it/s]Calculating FID activations:  73%|███████▎  | 171/235 [00:07<00:01, 36.61it/s]Calculating FID activations:  74%|███████▍  | 175/235 [00:07<00:01, 37.21it/s]Calculating FID activations:  76%|███████▌  | 179/235 [00:07<00:01, 37.40it/s]Calculating FID activations:  78%|███████▊  | 183/235 [00:07<00:01, 37.75it/s]Calculating FID activation
0: s:  80%|████████  | 188/235 [00:08<00:01, 40.02it/s]Calculating FID activations:  82%|████████▏ | 193/235 [00:08<00:01, 36.79it/s]Calculating FID activations:  84%|████████▍ | 197/235 [00:08<00:01, 37.39it/s]Calculating FID activations:  86%|████████▌ | 201/235 [00:08<00:00, 37.75it/s]Calculating FID activations:  88%|████████▊ | 206/235 [00:08<00:00, 39.56it/s]Calculating FID activations:  89%|████████▉ | 210/235 [00:08<00:00, 39.01it/s]Calculating FID activations:  91%|█████████▏| 215/235 [00:08<00:00, 40.34it/s]Calculating FID activations:  94%|█████████▎| 220/235 [00:08<00:00, 41.26it/s]Calculating FID activations:  96%|█████████▌| 225/235 [00:09<00:00, 39.00it/s]Calculating FID activations:  98%|█████████▊| 230/235 [00:09<00:00, 40.79it/s]Calculating FID activations: 100%|██████████| 235/235 
0: [00:09<00:00, 42.76it/s]Calculating FID activations: 100%|██████████| 235/235 [00:10<00:00, 23.36it/s]
0: Computed feature activations of size torch.Size([7500, 2048])
0: :::MLLOG {"namespace": "", "time_ms": 1714740760313, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 97.04007579263032, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 228, "samples_count": 2048000, "metric": "FID"}}
0: :::MLLOG {"namespace": "", "time_ms": 1714740867124, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.15691879391670227, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 258, "samples_count": 2048000, "metric": "CLIP"}}
0: Using 16bit Automatic Mixed Precision (AMP)
0: GPU available: True (cuda), used: True
0: TPU available: False, using: 0 TPU cores
0: IPU available: False, using: 0 IPUs
0: HPU available: False, using: 0 HPUs
0: [NeMo W 2024-05-03 21:54:27 utils:296] Loading from .ckpt checkpoint for inference is experimental! It doesn't support models with model parallelism!
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': False, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in
0: _channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filter
0: ed-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [rank0]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo I 2024-05-03 21:54:28 megatron_init:265] Rank 0 has data parallel group : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:271] Rank 0 has combined group of data parallel and context parallel : [0, 1, 2, 3]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:276] All data parallel group ranks with context parallel combined: [[0, 1, 2, 3]]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:279] Ranks 0 has data parallel rank: 0
0: [NeMo I 2024-05-03 21:54:28 megatron_init:287] Rank 0 has context parallel group: [0]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:290] All context parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:291] Ranks 0 has context parallel rank: 0
0: [NeMo I 2024-05-03 21:54:28 megatron_init:298] Rank 0 has model parallel group: [0]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:299] All model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:308] Rank 0 has tensor model parallel group: [0]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:312] All tensor model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:313] Rank 0 has tensor model parallel rank: 0
0: [NeMo I 2024-05-03 21:54:28 megatron_init:333] Rank 0 has pipeline model parallel group: [0]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:345] Rank 0 has embedding group: [0]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:351] All pipeline model parallel group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:352] Rank 0 has pipeline model parallel rank 0
0: [NeMo I 2024-05-03 21:54:28 megatron_init:353] All embedding group ranks: [[0], [1], [2], [3]]
0: [NeMo I 2024-05-03 21:54:28 megatron_init:354] Rank 0 has embedding rank: 0
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tensor_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: virtual_pipeline_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: sequence_parallel in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: context_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: expert_model_parallel_size in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_cpu_initialization in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: finalize_model_grads_func in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: gradient_accumulation_fusion in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: use_te_rng_tracker in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_wgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_bulk_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_overlap_rs_dgrad in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_ag in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_split_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: tp_comm_atomic_rs in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: overlap_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: batch_p2p_comm in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: defer_embedding_wgrad_compute in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: pipeline_model_parallel_split_rank in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_num_layers in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: _cpu_offloading_context in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_activations in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: cpu_offloading_weights in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1150] The model: MegatronLatentDiffusion() does not have field.name: barrier_with_L1_time in its cfg. Add this key to cfg or config_mapping to make to make it configurable.
0: [NeMo W 2024-05-03 21:54:28 megatron_base_model:1161] hidden_size not found in {'precision': 16, 'micro_batch_size': 64, 'global_batch_size': 256, 'linear_start': 0.00085, 'linear_end': 0.012, 'num_timesteps_cond': 1, 'log_every_t': 200, 'timesteps': 1000, 'first_stage_key': 'images_moments', 'cond_stage_key': 'clip_encoded', 'image_size': 64, 'channels': 4, 'cond_stage_trainable': False, 'conditioning_key': 'crossattn', 'monitor': 'val/loss_simple_ema', 'scale_factor': 0.18215, 'use_ema': False, 'scale_by_std': False, 'ckpt_path': '/checkpoints/sd/512-base-ema.ckpt', 'load_vae': True, 'load_unet': False, 'load_encoder': True, 'ignore_keys': [], 'parameterization': 'v', 'clip_denoised': True, 'load_only_unet': False, 'cosine_s': 0.008, 'given_betas': None, 'original_elbo_weight': 0, 'v_posterior': 0, 'l_simple_weight': 1, 'use_positional_encodings': False, 'learn_logvar': False, 'logvar_init': 0, 'beta_schedule': 'linear', 'loss_type': 'l2', 'channels_last': True, 'concat_mode': True, 'cond_stage_forward': No
0: ne, 'text_embedding_dropout_rate': 0.0, 'fused_opt': True, 'inductor': False, 'inductor_cudagraphs': False, 'capture_cudagraph_iters': 15, 'unet_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.diffusionmodules.openaimodel.UNetModel', 'from_pretrained': None, 'from_NeMo': None, 'image_size': 32, 'in_channels': 4, 'out_channels': 4, 'model_channels': 320, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_head_channels': 64, 'use_spatial_transformer': True, 'use_linear_in_transformer': True, 'transformer_depth': 1, 'context_dim': 1024, 'use_checkpoint': False, 'legacy': False, 'use_flash_attention': True, 'resblock_gn_groups': 16, 'unet_precision': 'fp16', 'timesteps': 1000}, 'first_stage_config': {'_target_': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.autoencoder.AutoencoderKL', 'from_pretrained': None, 'embed_dim': 4, 'monitor': 'val/rec_loss', 'ddconfig': {'double_z': True, 'z_channels': 4, 'resolution': 256, 'in
0: _channels': 3, 'out_ch': 3, 'ch': 128, 'ch_mult': [1, 2, 4, 4], 'num_res_blocks': 2, 'attn_resolutions': [], 'dropout': 0.0}, 'lossconfig': {'target': 'torch.nn.Identity'}}, 'cond_stage_config': {'_target_': 'nemo.collections.multimodal.modules.stable_diffusion.encoders.modules.FrozenOpenCLIPEmbedder', 'arch': 'ViT-H-14', 'version': 'laion2b_s32b_b79k', 'freeze': True, 'layer': 'penultimate', 'cache_dir': '/checkpoints/clip'}, 'seed': 14735, 'resume_from_checkpoint': None, 'apex_transformer_log_level': 30, 'gradient_as_bucket_view': True, 'ddp_overlap': False, 'nsys_profile': {'enabled': False, 'start_step': 10, 'end_step': 10, 'ranks': [0], 'gen_shape': False}, 'data': {'num_workers': 16, 'train': {'dataset_path': '/datasets/laion-400m/webdataset-moments-filtered-encoded/*.tar', 'augmentations': {'resize_smallest_side': 512, 'center_crop_h_w': '512, 512', 'horizontal_flip': False}, 'filterings': None}, 'webdataset': {'infinite_sampler': True, 'local_root_path': '/datasets/laion-400m/webdataset-moments-filter
0: ed-encoded'}}, 'optim': {'name': 'distributed_fused_adam', 'lr': 2.56e-05, 'weight_decay': 0.0, 'betas': [0.9, 0.999], 'sched': {'name': 'WarmupHoldPolicy', 'warmup_steps': 1000, 'hold_steps': 10000000000000}, 'bucket_cap_mb': 288, 'overlap_grad_sync': True, 'overlap_param_sync': False, 'contiguous_grad_buffer': True, 'contiguous_param_buffer': True, 'store_params': True, 'dtype': 'torch.float32', 'grad_sync_dtype': 'torch.float16', 'param_sync_dtype': 'torch.float16', 'capturable': True, 'distribute_within_nodes': True}, 'target': 'nemo.collections.multimodal.models.text_to_image.stable_diffusion.ldm.ddpm.MegatronLatentDiffusion', 'nemo_version': '2.0.0b0'}. Set this in model_parallel_config if using pipeline parallelism.
0: [NeMo I 2024-05-03 21:54:28 ddpm:130] LatentDiffusion: Running in v-prediction mode
0: [NeMo I 2024-05-03 21:54:28 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 21:54:28 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 21:54:28 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 21:54:28 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
2: [rank2]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
3: [rank3]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
1: [rank1]:[W init.cpp:767] Warning: nvfuser is no longer supported in torch script, use _jit_set_nvfuser_enabled is deprecated and a no-op (function operator())
0: [NeMo I 2024-05-03 21:54:29 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:54:29 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:54:29 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:54:31 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:54:31 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:54:31 attention:436] constructing SpatialTransformer of depth 1 w/ 1280 channels and 20 heads
0: [NeMo I 2024-05-03 21:54:32 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 21:54:32 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 21:54:32 attention:436] constructing SpatialTransformer of depth 1 w/ 640 channels and 10 heads
0: [NeMo I 2024-05-03 21:54:32 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 21:54:32 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 21:54:32 attention:436] constructing SpatialTransformer of depth 1 w/ 320 channels and 5 heads
0: [NeMo I 2024-05-03 21:54:32 utils:92] DiffusionWrapper has 865.91 M params.
0: [NeMo I 2024-05-03 21:54:32 ddpm:168] Use system random generator since CUDA graph enabled
0: making attention of type 'vanilla' with 512 in_channels
0: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
0: making attention of type 'vanilla' with 512 in_channels
0: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
0: Loaded ViT-H-14 model config.
2: Computed feature activations of size torch.Size([7500, 2048])
2: making attention of type 'vanilla' with 512 in_channels
2: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
2: making attention of type 'vanilla' with 512 in_channels
2: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
2: Loaded ViT-H-14 model config.
1: Computed feature activations of size torch.Size([7500, 2048])
1: making attention of type 'vanilla' with 512 in_channels
1: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
1: making attention of type 'vanilla' with 512 in_channels
1: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
1: Loaded ViT-H-14 model config.
3: Computed feature activations of size torch.Size([7500, 2048])
3: making attention of type 'vanilla' with 512 in_channels
3: Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
3: making attention of type 'vanilla' with 512 in_channels
3: Downloading clip with ViT-H-14 laion2b_s32b_b79k /checkpoints/clip
3: Loaded ViT-H-14 model config.
0: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
2: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
1: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
3: Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
0: [NeMo I 2024-05-03 21:54:41 ddpm:260] Loading /checkpoints/sd/512-base-ema.ckpt
0: [NeMo I 2024-05-03 21:54:41 ddpm:261] It has 1242 entries
0: [NeMo I 2024-05-03 21:54:41 ddpm:262] Existing model has 1240 entries
0: [NeMo I 2024-05-03 21:54:41 ddpm:296] Deleted 686 keys from `model.diffusion_model` state_dict.
0: [NeMo I 2024-05-03 21:54:41 ddpm:301] Restored from /checkpoints/sd/512-base-ema.ckpt with 686 missing and 2 unexpected keys
0: [NeMo I 2024-05-03 21:54:41 ddpm:303] Missing Keys: ['model.diffusion_model.time_embed.0.weight', 'model.diffusion_model.time_embed.0.bias', 'model.diffusion_model.time_embed.2.weight', 'model.diffusion_model.time_embed.2.bias', 'model.diffusion_model.input_blocks.0.0.weight', 'model.diffusion_model.input_blocks.0.0.bias', 'model.diffusion_model.input_blocks.1.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.1.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.1.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.1.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.1.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.1.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.1.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.1.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.1.1.norm.weight', 'model.diffusion_model.input_blocks.1.1
0: .norm.bias', 'model.diffusion_model.input_blocks.1.1.proj_in.weight', 'model.diffusion_model.input_blocks.1.1.proj_in.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_k.weight', 'mod
0: el.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.1.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.1.1.proj_out.weight', 'model.diffusion_model.input_blocks.1.1.proj_out.bias', 'model.diffusion_model.input_blocks.2.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.2.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.2.0.in_layers.1.weight', 'model.diffusion_model.input_block
0: s.2.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.2.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.2.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.2.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.2.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.2.1.norm.weight', 'model.diffusion_model.input_blocks.2.1.norm.bias', 'model.diffusion_model.input_blocks.2.1.proj_in.weight', 'model.diffusion_model.input_blocks.2.1.proj_in.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn1.to_out.0.bias', 'mod
0: el.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm2.bi
0: as', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.2.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.2.1.proj_out.weight', 'model.diffusion_model.input_blocks.2.1.proj_out.bias', 'model.diffusion_model.input_blocks.3.0.op.weight', 'model.diffusion_model.input_blocks.3.0.op.bias', 'model.diffusion_model.input_blocks.4.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.4.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.4.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.4.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.4.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.4.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.4.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.4.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.4.0.skip_co
0: nnection.weight', 'model.diffusion_model.input_blocks.4.0.skip_connection.bias', 'model.diffusion_model.input_blocks.4.1.norm.weight', 'model.diffusion_model.input_blocks.4.1.norm.bias', 'model.diffusion_model.input_blocks.4.1.proj_in.weight', 'model.diffusion_model.input_blocks.4.1.proj_in.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.ff.net.2
0: .bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.4.1.proj_out.weight', 'model.diffusion_model.input_blocks.4.1.proj_out.bias', 'model.diffusion_model.input_blocks.5.0.i
0: n_layers.0.weight', 'model.diffusion_model.input_blocks.5.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.5.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.5.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.5.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.5.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.5.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.5.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.5.1.norm.weight', 'model.diffusion_model.input_blocks.5.1.norm.bias', 'model.diffusion_model.input_blocks.5.1.proj_in.weight', 'model.diffusion_model.input_blocks.5.1.proj_in.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_v.weight'
0: , 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.5.1.trans
0: former_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.5.1.proj_out.weight', 'model.diffusion_model.input_blocks.5.1.proj_out.bias', 'model.diffusion_model.input_blocks.6.0.op.weight', 'model.diffusion_model.input_blocks.6.0.op.bias', 'model.diffusion_model.input_blocks.7.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.7.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.7.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.7.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.7.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.7.0.out_layers.0.bi
0: as', 'model.diffusion_model.input_blocks.7.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.7.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.7.0.skip_connection.weight', 'model.diffusion_model.input_blocks.7.0.skip_connection.bias', 'model.diffusion_model.input_blocks.7.1.norm.weight', 'model.diffusion_model.input_blocks.7.1.norm.bias', 'model.diffusion_model.input_blocks.7.1.proj_in.weight', 'model.diffusion_model.input_blocks.7.1.proj_in.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.7.1.transformer_bloc
0: ks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.7.1.transformer_blo
0: cks.0.norm3.bias', 'model.diffusion_model.input_blocks.7.1.proj_out.weight', 'model.diffusion_model.input_blocks.7.1.proj_out.bias', 'model.diffusion_model.input_blocks.8.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.8.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.8.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.8.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.8.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.8.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.8.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.8.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.8.1.norm.weight', 'model.diffusion_model.input_blocks.8.1.norm.bias', 'model.diffusion_model.input_blocks.8.1.proj_in.weight', 'model.diffusion_model.input_blocks.8.1.proj_in.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.
0: to_q.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.input_b
0: locks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.input_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.input_blocks.8.1.proj_out.weight', 'model.diffusion_model.input_blocks.8.1.proj_out.bias', 'model.diffusion_model.input_blocks.9.0.op.weight', 'model.diffusion_model.input_blocks.9.0.op.bias', 'model.diffusion_model.input_blocks.10.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.10.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.10.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.10.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.10.0.emb_layers.1.weight'
0: , 'model.diffusion_model.input_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.10.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.10.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.10.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.10.0.out_layers.2.bias', 'model.diffusion_model.input_blocks.11.0.in_layers.0.weight', 'model.diffusion_model.input_blocks.11.0.in_layers.0.bias', 'model.diffusion_model.input_blocks.11.0.in_layers.1.weight', 'model.diffusion_model.input_blocks.11.0.in_layers.1.bias', 'model.diffusion_model.input_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model.input_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model.input_blocks.11.0.out_layers.0.weight', 'model.diffusion_model.input_blocks.11.0.out_layers.0.bias', 'model.diffusion_model.input_blocks.11.0.out_layers.2.weight', 'model.diffusion_model.input_blocks.11.0.out_layers.2.bias', 'model.diffusion_model.middle_block.0.in_layers.0.weight', 'model.diffusion_model.middle_block.0.
0: in_layers.0.bias', 'model.diffusion_model.middle_block.0.in_layers.1.weight', 'model.diffusion_model.middle_block.0.in_layers.1.bias', 'model.diffusion_model.middle_block.0.emb_layers.1.weight', 'model.diffusion_model.middle_block.0.emb_layers.1.bias', 'model.diffusion_model.middle_block.0.out_layers.0.weight', 'model.diffusion_model.middle_block.0.out_layers.0.bias', 'model.diffusion_model.middle_block.0.out_layers.2.weight', 'model.diffusion_model.middle_block.0.out_layers.2.bias', 'model.diffusion_model.middle_block.1.norm.weight', 'model.diffusion_model.middle_block.1.norm.bias', 'model.diffusion_model.middle_block.1.proj_in.weight', 'model.diffusion_model.middle_block.1.proj_in.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.weight', 'mode
0: l.diffusion_model.middle_block.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm2.weight', 'model.diffus
0: ion_model.middle_block.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.middle_block.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.middle_block.1.proj_out.weight', 'model.diffusion_model.middle_block.1.proj_out.bias', 'model.diffusion_model.middle_block.2.in_layers.0.weight', 'model.diffusion_model.middle_block.2.in_layers.0.bias', 'model.diffusion_model.middle_block.2.in_layers.1.weight', 'model.diffusion_model.middle_block.2.in_layers.1.bias', 'model.diffusion_model.middle_block.2.emb_layers.1.weight', 'model.diffusion_model.middle_block.2.emb_layers.1.bias', 'model.diffusion_model.middle_block.2.out_layers.0.weight', 'model.diffusion_model.middle_block.2.out_layers.0.bias', 'model.diffusion_model.middle_block.2.out_layers.2.weight', 'model.diffusion_model.middle_block.2.out_layers.2.bias', 'model.diffusion_model.output_blocks.0.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.0.0.in_layers.0.bias', '
0: model.diffusion_model.output_blocks.0.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.0.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.0.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.0.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.0.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.0.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.0.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.0.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.0.0.skip_connection.weight', 'model.diffusion_model.output_blocks.0.0.skip_connection.bias', 'model.diffusion_model.output_blocks.1.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.1.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.1.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.1.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.1.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.1.0.emb_layers.1.bias', 'model.diffusion_model.output_blo
0: cks.1.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.1.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.1.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.1.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.1.0.skip_connection.weight', 'model.diffusion_model.output_blocks.1.0.skip_connection.bias', 'model.diffusion_model.output_blocks.2.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.2.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.2.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.2.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.2.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.2.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.2.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.2.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.2.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.2.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.2.0.skip_connection.weight
0: ', 'model.diffusion_model.output_blocks.2.0.skip_connection.bias', 'model.diffusion_model.output_blocks.2.1.conv.weight', 'model.diffusion_model.output_blocks.2.1.conv.bias', 'model.diffusion_model.output_blocks.3.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.3.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.3.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.3.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.3.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.3.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.3.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.3.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.3.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.3.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.3.0.skip_connection.weight', 'model.diffusion_model.output_blocks.3.0.skip_connection.bias', 'model.diffusion_model.output_blocks.3.1.norm.weight', 'model.diffusion_model.output_blocks.3.1.norm.bi
0: as', 'model.diffusion_model.output_blocks.3.1.proj_in.weight', 'model.diffusion_model.output_blocks.3.1.proj_in.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_k.weight',
0:  'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.3.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.3.1.proj_out.weight', 'model.diffusion_model.output_blocks.3.1.proj_out.bias', 'model.diffusion_model.output_blocks.4.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.4.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.4.0.in_layers.1.weight', 'model.diffusio
0: n_model.output_blocks.4.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.4.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.4.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.4.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.4.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.4.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.4.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.4.0.skip_connection.weight', 'model.diffusion_model.output_blocks.4.0.skip_connection.bias', 'model.diffusion_model.output_blocks.4.1.norm.weight', 'model.diffusion_model.output_blocks.4.1.norm.bias', 'model.diffusion_model.output_blocks.4.1.proj_in.weight', 'model.diffusion_model.output_blocks.4.1.proj_in.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_v.weight', 'model.di
0: ffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.4.1.tra
0: nsformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.4.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.4.1.proj_out.weight', 'model.diffusion_model.output_blocks.4.1.proj_out.bias', 'model.diffusion_model.output_blocks.5.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.5.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.5.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.5.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.5.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.5.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.5.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.5.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.5.0.out_layers.2.weight', 'model.diffusion_m
0: odel.output_blocks.5.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.5.0.skip_connection.weight', 'model.diffusion_model.output_blocks.5.0.skip_connection.bias', 'model.diffusion_model.output_blocks.5.1.norm.weight', 'model.diffusion_model.output_blocks.5.1.norm.bias', 'model.diffusion_model.output_blocks.5.1.proj_in.weight', 'model.diffusion_model.output_blocks.5.1.proj_in.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.5.1.tran
0: sformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.5.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.5.
0: 1.proj_out.weight', 'model.diffusion_model.output_blocks.5.1.proj_out.bias', 'model.diffusion_model.output_blocks.5.2.conv.weight', 'model.diffusion_model.output_blocks.5.2.conv.bias', 'model.diffusion_model.output_blocks.6.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.6.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.6.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.6.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.6.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.6.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.6.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.6.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.6.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.6.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.6.0.skip_connection.weight', 'model.diffusion_model.output_blocks.6.0.skip_connection.bias', 'model.diffusion_model.output_blocks.6.1.norm.weight', 'model.diffusion_model.output_blocks.6
0: .1.norm.bias', 'model.diffusion_model.output_blocks.6.1.proj_in.weight', 'model.diffusion_model.output_blocks.6.1.proj_in.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_
0: k.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.6.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.6.1.proj_out.weight', 'model.diffusion_model.output_blocks.6.1.proj_out.bias', 'model.diffusion_model.output_blocks.7.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.7.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.7.0.in_layers.1.weight', 'mode
0: l.diffusion_model.output_blocks.7.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.7.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.7.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.7.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.7.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.7.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.7.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.7.0.skip_connection.weight', 'model.diffusion_model.output_blocks.7.0.skip_connection.bias', 'model.diffusion_model.output_blocks.7.1.norm.weight', 'model.diffusion_model.output_blocks.7.1.norm.bias', 'model.diffusion_model.output_blocks.7.1.proj_in.weight', 'model.diffusion_model.output_blocks.7.1.proj_in.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_v.weight',
0:  'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_bloc
0: ks.7.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.7.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.7.1.proj_out.weight', 'model.diffusion_model.output_blocks.7.1.proj_out.bias', 'model.diffusion_model.output_blocks.8.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.8.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.8.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.8.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.8.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.8.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.8.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.8.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.8.0.out_layers.2.weight', 'model.d
0: iffusion_model.output_blocks.8.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.8.0.skip_connection.weight', 'model.diffusion_model.output_blocks.8.0.skip_connection.bias', 'model.diffusion_model.output_blocks.8.1.norm.weight', 'model.diffusion_model.output_blocks.8.1.norm.bias', 'model.diffusion_model.output_blocks.8.1.proj_in.weight', 'model.diffusion_model.output_blocks.8.1.proj_in.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_block
0: s.8.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.8.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output
0: _blocks.8.1.proj_out.weight', 'model.diffusion_model.output_blocks.8.1.proj_out.bias', 'model.diffusion_model.output_blocks.8.2.conv.weight', 'model.diffusion_model.output_blocks.8.2.conv.bias', 'model.diffusion_model.output_blocks.9.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.9.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.9.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.9.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.9.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.9.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.9.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.9.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.9.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.9.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.9.0.skip_connection.weight', 'model.diffusion_model.output_blocks.9.0.skip_connection.bias', 'model.diffusion_model.output_blocks.9.1.norm.weight', 'model.diffusion_model.outpu
0: t_blocks.9.1.norm.bias', 'model.diffusion_model.output_blocks.9.1.proj_in.weight', 'model.diffusion_model.output_blocks.9.1.proj_in.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0
0: .attn2.to_k.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.9.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.9.1.proj_out.weight', 'model.diffusion_model.output_blocks.9.1.proj_out.bias', 'model.diffusion_model.output_blocks.10.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.10.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.10.0.in_layers.1.w
0: eight', 'model.diffusion_model.output_blocks.10.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.10.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.10.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.10.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.10.0.out_layers.0.bias', 'model.diffusion_model.output_blocks.10.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.10.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.10.0.skip_connection.weight', 'model.diffusion_model.output_blocks.10.0.skip_connection.bias', 'model.diffusion_model.output_blocks.10.1.norm.weight', 'model.diffusion_model.output_blocks.10.1.norm.bias', 'model.diffusion_model.output_blocks.10.1.proj_in.weight', 'model.diffusion_model.output_blocks.10.1.proj_in.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.10.1.transformer
0: _blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.we
0: ight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.weight', 'model.diffusion_model.output_blocks.10.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.10.1.proj_out.weight', 'model.diffusion_model.output_blocks.10.1.proj_out.bias', 'model.diffusion_model.output_blocks.11.0.in_layers.0.weight', 'model.diffusion_model.output_blocks.11.0.in_layers.0.bias', 'model.diffusion_model.output_blocks.11.0.in_layers.1.weight', 'model.diffusion_model.output_blocks.11.0.in_layers.1.bias', 'model.diffusion_model.output_blocks.11.0.emb_layers.1.weight', 'model.diffusion_model.output_blocks.11.0.emb_layers.1.bias', 'model.diffusion_model.output_blocks.11.0.out_layers.0.weight', 'model.diffusion_model.output_blocks.11.0.out_layers.0.bias', 'model.diffusio
0: n_model.output_blocks.11.0.out_layers.2.weight', 'model.diffusion_model.output_blocks.11.0.out_layers.2.bias', 'model.diffusion_model.output_blocks.11.0.skip_connection.weight', 'model.diffusion_model.output_blocks.11.0.skip_connection.bias', 'model.diffusion_model.output_blocks.11.1.norm.weight', 'model.diffusion_model.output_blocks.11.1.norm.bias', 'model.diffusion_model.output_blocks.11.1.proj_in.weight', 'model.diffusion_model.output_blocks.11.1.proj_in.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_q.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_k.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_v.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn1.to_out.0.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.0.proj.weight', 'model.diffusion_model.output_blocks.11.1.transf
0: ormer_blocks.0.ff.net.0.proj.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.ff.net.2.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_q.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_k.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_v.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.attn2.to_out.0.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm1.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.weight', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm2.bias', 'model.diffusion_model.output_blocks.11.1.transformer_blocks.0.norm3.weight', 'model.diffusion_mode
0: l.output_blocks.11.1.transformer_blocks.0.norm3.bias', 'model.diffusion_model.output_blocks.11.1.proj_out.weight', 'model.diffusion_model.output_blocks.11.1.proj_out.bias', 'model.diffusion_model.out.0.weight', 'model.diffusion_model.out.0.bias', 'model.diffusion_model.out.1.weight', 'model.diffusion_model.out.1.bias']
0: [NeMo I 2024-05-03 21:54:41 ddpm:305] Unexpected Keys: ['model_ema.decay', 'model_ema.num_updates']
0: Global ID: 0, local ID: 0, world size: 4
0: Rank 0 before barrier
1: Global ID: 1, local ID: 1, world size: 4
1: Rank 1 before barrier
2: Global ID: 2, local ID: 2, world size: 4
2: Rank 2 before barrier
3: Global ID: 3, local ID: 3, world size: 4
3: Rank 3 before barrier
0: :::MLLOG {"namespace": "", "time_ms": 1714740884431, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 127, "samples_count": 2560000}}
0: Assigned 7500 prompts for this worker.
0: :::MLLOG {"namespace": "", "time_ms": 1714743134286, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 184, "samples_count": 2560000}}
1: Assigned 7500 prompts for this worker.
2: Assigned 7500 prompts for this worker.
3: Assigned 7500 prompts for this worker.
0: Calculating FID activations:   0%|          | 0/235 [00:00<?, ?it/s]Calculating FID activations:   0%|          | 1/235 [00:01<04:09,  1.07s/it]Calculating FID activations:   2%|▏         | 5/235 [00:01<00:43,  5.29it/s]Calculating FID activations:   4%|▍         | 9/235 [00:01<00:24,  9.32it/s]Calculating FID activations:   6%|▌         | 13/235 [00:01<00:17, 12.86it/s]Calculating FID activations:   7%|▋         | 17/235 [00:01<00:13, 15.92it/s]Calculating FID activations:   9%|▉         | 21/235 [00:01<00:11, 18.22it/s]Calculating FID activations:  11%|█         | 25/235 [00:02<00:10, 19.55it/s]Calculating FID activations:  12%|█▏        | 29/235 [00:02<00:09, 21.87it/s]Calculating FID activations:  14%|█▍        | 33/235 [00:02<00:08, 22.51it/s]Calculating FID activations:  16%|█▌        | 37/235 [00:02<00:08, 23.04it/s]Calculating FID activations:  17%|█▋        | 41/235 [00:02<00:08, 23.84it/s]Calculating FID activations:  19%|█▉        | 45/235 [00:02<00:07, 
0: 24.29it/s]Calculating FID activations:  21%|██        | 49/235 [00:02<00:07, 24.66it/s]Calculating FID activations:  23%|██▎       | 53/235 [00:03<00:07, 25.98it/s]Calculating FID activations:  24%|██▍       | 57/235 [00:03<00:06, 25.73it/s]Calculating FID activations:  26%|██▌       | 61/235 [00:03<00:06, 25.88it/s]Calculating FID activations:  28%|██▊       | 65/235 [00:03<00:06, 24.57it/s]Calculating FID activations:  29%|██▉       | 69/235 [00:03<00:06, 26.06it/s]Calculating FID activations:  31%|███       | 73/235 [00:03<00:06, 25.73it/s]Calculating FID activations:  33%|███▎      | 77/235 [00:04<00:06, 25.74it/s]Calculating FID activations:  34%|███▍      | 81/235 [00:04<00:05, 25.74it/s]Calculating FID activations:  36%|███▌      | 85/235 [00:04<00:05, 25.55it/s]Calculating FID activations:  38%|███▊      | 89/235 [00:04<00:05, 26.12it/s]Calculating FID activations:  40%|███▉      | 93/235 [00:04<00:05, 24.61it/
0: s]Calculating FID activations:  42%|████▏     | 99/235 [00:04<00:04, 31.63it/s]Calculating FID activations:  44%|████▍     | 103/235 [00:04<00:03, 33.43it/s]Calculating FID activations:  46%|████▌     | 108/235 [00:04<00:03, 36.86it/s]Calculating FID activations:  48%|████▊     | 113/235 [00:05<00:03, 35.00it/s]Calculating FID activations:  50%|█████     | 118/235 [00:05<00:03, 37.53it/s]Calculating FID activations:  52%|█████▏    | 123/235 [00:05<00:02, 39.57it/s]Calculating FID activations:  54%|█████▍    | 128/235 [00:05<00:02, 40.75it/s]Calculating FID activations:  57%|█████▋    | 133/235 [00:05<00:02, 37.55it/s]Calculating FID activations:  58%|█████▊    | 137/235 [00:05<00:02, 38.05it/s]Calculating FID activations:  60%|██████    | 141/235 [00:05<00:02, 37.88it/s]Calculating FID activations:  62%|██████▏   | 146/235 [00:05<00:02, 39.63it/s]Calculating FID activations: 
0:  64%|██████▍   | 151/235 [00:06<00:02, 41.12it/s]Calculating FID activations:  66%|██████▋   | 156/235 [00:06<00:01, 41.89it/s]Calculating FID activations:  69%|██████▊   | 161/235 [00:06<00:01, 38.06it/s]Calculating FID activations:  70%|███████   | 165/235 [00:06<00:01, 38.49it/s]Calculating FID activations:  72%|███████▏  | 170/235 [00:06<00:01, 40.06it/s]Calculating FID activations:  74%|███████▍  | 175/235 [00:06<00:01, 40.84it/s]Calculating FID activations:  77%|███████▋  | 180/235 [00:06<00:01, 41.67it/s]Calculating FID activations:  79%|███████▊  | 185/235 [00:06<00:01, 37.90it/s]Calculating FID activations:  80%|████████  | 189/235 [00:07<00:01, 38.22it/s]Calculating FID activations:  82%|████████▏ | 193/235 [00:07<00:01, 38.57it/s]Calculating FID activations:  84%|████████▍ | 197/235 [00:07<00:00, 38.89it/s]Calculating 
0: FID activations:  86%|████████▌ | 201/235 [00:07<00:00, 39.11it/s]Calculating FID activations:  87%|████████▋ | 205/235 [00:07<00:00, 39.17it/s]Calculating FID activations:  89%|████████▉ | 209/235 [00:07<00:00, 39.30it/s]Calculating FID activations:  91%|█████████ | 214/235 [00:07<00:00, 40.66it/s]Calculating FID activations:  93%|█████████▎| 219/235 [00:07<00:00, 41.48it/s]Calculating FID activations:  95%|█████████▌| 224/235 [00:07<00:00, 41.77it/s]Calculating FID activations:  97%|█████████▋| 229/235 [00:08<00:00, 37.85it/s]Calculating FID activations: 100%|█████████▉| 234/235 [00:08<00:00, 39.58it/s]Calculating FID activations: 100%|██████████| 235/235 [00:08<00:00, 27.29it/s]
0: Computed feature activations of size torch.Size([7500, 2048])
0: :::MLLOG {"namespace": "", "time_ms": 1714743172849, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 86.4970919953173, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 228, "samples_count": 2560000, "metric": "FID"}}
0: :::MLLOG {"namespace": "", "time_ms": 1714743280612, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.15919362008571625, "metadata": {"file": "/workspace/sd/infer_and_eval.py", "lineno": 258, "samples_count": 2560000, "metric": "CLIP"}}
0: :::MLLOG {"namespace": "", "time_ms": 1714730073085, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/usr/local/lib/python3.10/dist-packages/hydra/core/utils.py", "lineno": 186, "status": "success", "step_num": 10000}}
3: Computed feature activations of size torch.Size([7500, 2048])
2: Computed feature activations of size torch.Size([7500, 2048])
1: Computed feature activations of size torch.Size([7500, 2048])
2: ENDING TIMING RUN AT 2024-05-03 10:34:48 PM
2: RESULT,stable_diffusion,18676,miwa,2024-05-03 05:23:32 PM
0: ENDING TIMING RUN AT 2024-05-03 10:34:48 PM
0: RESULT,stable_diffusion,18676,miwa,2024-05-03 05:23:32 PM
3: ENDING TIMING RUN AT 2024-05-03 10:34:49 PM
3: RESULT,stable_diffusion,18677,miwa,2024-05-03 05:23:32 PM
1: ENDING TIMING RUN AT 2024-05-03 10:34:49 PM
1: RESULT,stable_diffusion,18677,miwa,2024-05-03 05:23:32 PM
